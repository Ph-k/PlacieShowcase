{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/administrator/administrator.component.ts","./src/app/administrator/administrator.component.html","./src/app/administrator/export-data/export-data.component.ts","./src/app/administrator/export-data/export-data.component.html","./src/app/administrator/users/user-details/user-details.component.ts","./src/app/administrator/users/user-details/user-details.component.html","./src/app/administrator/users/users.component.ts","./src/app/administrator/users/users.component.html","./src/app/all-places/all-places.component.ts","./src/app/all-places/all-places.component.html","./src/app/all-places/place-details/place-details.component.ts","./src/app/all-places/place-details/place-details.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/host/host.component.ts","./src/app/host/host.component.html","./src/app/host/new-place/new-place.component.ts","./src/app/host/new-place/new-place.component.html","./src/app/host/places/edit-place/edit-place.component.ts","./src/app/host/places/edit-place/edit-place.component.html","./src/app/host/places/places.component.ts","./src/app/host/places/places.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/messages/new-message/new-message.component.ts","./src/app/messages/new-message/new-message.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/search-form/search-form.component.ts","./src/app/search-form/search-form.component.html","./src/app/service/administrator-guard.service.ts","./src/app/service/host-guard.service.ts","./src/app/service/message.service.ts","./src/app/service/place.service.ts","./src/app/service/tenant-guard.service.ts","./src/app/service/user-guard.service.ts","./src/app/service/user.service.ts","./src/app/tenant/tenant.component.ts","./src/app/tenant/tenant.component.html","./src/app/user-edit/user-edit.component.ts","./src/app/user-edit/user-edit.component.html","./src/environments/environment.ts","./src/main.ts","./src/model/Availability.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administrator',\n  templateUrl: './administrator.component.html',\n  styleUrls: ['./administrator.component.css']\n})\nexport class AdministratorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"administratorPanel\">\r\n  <button routerLink=\"/users\" class=\"panelButton\"><label class=\"panelLabel\">Users</label></button>\r\n  <button routerLink=\"/exportData\" class=\"panelButton\"><label class=\"panelLabel\">Export Data</label></button>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from '../../service/user.service';\r\nimport {User} from '../../../model/User';\r\nimport {Place} from '../../../model/Place';\r\nimport {Reservation} from '../../../model/Reservation';\r\nimport {Availability} from '../../../model/Availability';\r\nimport {PendingHost} from '../../../model/PendingHost';\r\nimport {Review} from '../../../model/Review';\r\nimport {Message} from '../../../model/Message';\r\nimport {PlacePhoto} from '../../../model/PlacePhoto';\r\nimport {PlaceService} from '../../service/place.service';\r\nimport {MessageService} from '../../service/message.service';\r\n\r\n@Component({\r\n  selector: 'app-export-data',\r\n  templateUrl: './export-data.component.html',\r\n  styleUrls: ['./export-data.component.css']\r\n})\r\nexport class ExportDataComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService, private placeService: PlaceService,\r\n              private messageService: MessageService ) { }\r\n\r\n  fileFormat = true; // true = JSON | false = XML\r\n\r\n  ngOnInit(): void {}\r\n\r\n  exportUsers(): void{\r\n    const a = document.createElement('a');\r\n    if (this.fileFormat === true) {\r\n      this.userService.getUsers().subscribe(users => {\r\n        const file = new Blob([JSON.stringify(users)], {type: 'text/plain'});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = 'Users.json';\r\n        a.click();\r\n      });\r\n    }else{\r\n      this.userService.getUsersxml().subscribe(\r\n        XML => {\r\n          const file = new Blob( [XML], {type: 'application/xml'});\r\n          a.href = URL.createObjectURL(file);\r\n          a.download = 'Users.xml';\r\n          a.click();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  exportPendingHosts(): void{\r\n    const a = document.createElement('a');\r\n    if (this.fileFormat === true) {\r\n      this.userService.getPendingHosts().subscribe(pendingHosts => {\r\n        const file = new Blob([JSON.stringify(pendingHosts)], {type: 'text/plain'});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = 'PendingHosts.json';\r\n        a.click();\r\n      });\r\n    }else{\r\n      this.userService.getPendingHostsXml().subscribe(\r\n        XML => {\r\n          const file = new Blob( [XML], {type: 'application/xml'});\r\n          a.href = URL.createObjectURL(file);\r\n          a.download = 'PendingHosts.xml';\r\n          a.click();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  exportPlaces(): void{\r\n    const a = document.createElement('a');\r\n    if (this.fileFormat === true) {\r\n      this.placeService.getPlaces().subscribe(places => {\r\n        const file = new Blob([JSON.stringify(places)], {type: 'text/plain'});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = 'Places.json';\r\n        a.click();\r\n      });\r\n    }else{\r\n      this.placeService.getReservationsXml().subscribe(\r\n        XML => {\r\n          const file = new Blob( [XML], {type: 'application/xml'});\r\n          a.href = URL.createObjectURL(file);\r\n          a.download = 'Places.xml';\r\n          a.click();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  exportReservations(): void{\r\n    const a = document.createElement('a');\r\n    if (this.fileFormat === true) {\r\n      this.placeService.getReservations().subscribe(reservations => {\r\n        const file = new Blob([JSON.stringify(reservations)], {type: 'text/plain'});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = 'Reservations.json';\r\n        a.click();\r\n      });\r\n    }else{\r\n      this.placeService.getReservationsXml().subscribe(\r\n        XML => {\r\n          const file = new Blob( [XML], {type: 'application/xml'});\r\n          a.href = URL.createObjectURL(file);\r\n          a.download = 'Reservations.xml';\r\n          a.click();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  exportAvailabilities(): void{\r\n    const a = document.createElement('a');\r\n    if (this.fileFormat === true) {\r\n      this.placeService.getAvailabilities().subscribe(availabilities => {\r\n        const file = new Blob([JSON.stringify(availabilities)], {type: 'text/plain'});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = 'Availabilities.json';\r\n        a.click();\r\n      });\r\n    }else{\r\n      this.placeService.getAvailabilitiesXml().subscribe(\r\n        XML => {\r\n          const file = new Blob( [XML], {type: 'application/xml'});\r\n          a.href = URL.createObjectURL(file);\r\n          a.download = 'Availabilities.xml';\r\n          a.click();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  exportReviews(): void{\r\n    const a = document.createElement('a');\r\n    if (this.fileFormat === true) {\r\n      this.placeService.getReviews().subscribe( reviews => {\r\n        const file = new Blob([JSON.stringify(reviews)], {type: 'text/plain'});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = 'Reviews.json';\r\n        a.click();\r\n      });\r\n    }else{\r\n      this.placeService.getReviewsXml().subscribe(\r\n        XML => {\r\n          const file = new Blob( [XML], {type: 'application/xml'});\r\n          a.href = URL.createObjectURL(file);\r\n          a.download = 'Reviews.xml';\r\n          a.click();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  exportMessages(): void{\r\n    const a = document.createElement('a');\r\n    if (this.fileFormat === true) {\r\n      this.messageService.getMessages().subscribe(messages => {\r\n        const file = new Blob([JSON.stringify(messages)], {type: 'text/plain'});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = 'Messages.json';\r\n        a.click();\r\n      });\r\n    }else{\r\n      this.messageService.getMessagesXml().subscribe(\r\n        XML => {\r\n          const file = new Blob( [XML], {type: 'application/xml'});\r\n          a.href = URL.createObjectURL(file);\r\n          a.download = 'Messages.xml';\r\n          a.click();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  exportPlacePhotos(): void{\r\n    const a = document.createElement('a');\r\n    if (this.fileFormat === true) {\r\n      this.placeService.getPlacePhotos().subscribe( photos => {\r\n        const file = new Blob([JSON.stringify(photos)], {type: 'text/plain'});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = 'PlacePhotos.json';\r\n        a.click();\r\n      });\r\n    }else{\r\n      this.placeService.getPlacePhotosXml().subscribe(\r\n        XML => {\r\n          const file = new Blob( [XML], {type: 'application/xml'});\r\n          a.href = URL.createObjectURL(file);\r\n          a.download = 'PlacePhotos.xml';\r\n          a.click();\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<h2>Export Data</h2>\r\n\r\n<div id=\"formatSelector\">\r\n  <label>Select file format:</label><br>\r\n  <label>JSON</label><input type=\"radio\"  [(ngModel)]=\"fileFormat\" [value]=\"true\" name=\"true\"/>\r\n  <label> XML</label><input type=\"radio\"  [(ngModel)]=\"fileFormat\" [value]=\"false\" name=\"false\"/><br><br>\r\n</div>\r\n\r\n<div id=\"exportPanel\">\r\n\r\n  <button (click)=\"exportUsers()\"><label class=\"clickable\">Export Users</label></button><br>\r\n  <button (click)=\"exportPlaces()\"><label class=\"clickable\">Export Places</label></button><br>\r\n  <button (click)=\"exportPendingHosts()\"><label class=\"clickable\">Export Pending Hosts</label></button><br>\r\n  <button (click)=\"exportAvailabilities()\"><label class=\"clickable\">Export Availabilities</label></button><br>\r\n  <button (click)=\"exportMessages()\"><label class=\"clickable\">Export Messages</label></button><br>\r\n  <button (click)=\"exportReservations()\"><label class=\"clickable\">Export Reservations</label></button><br>\r\n  <button (click)=\"exportReviews()\"><label class=\"clickable\">Export Reviews</label></button><br>\r\n  <button (click)=\"exportPlacePhotos()\"><label class=\"clickable\">Export Place Photos</label></button><br>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from '../../../service/user.service';\r\nimport {User} from '../../../../model/User';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {PendingHost} from '../../../../model/PendingHost';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.css']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n\r\n  user: User;\r\n  pendingHost: PendingHost;\r\n  userExists = true;\r\n  private id = this.route.snapshot.paramMap.get('id');\r\n  constructor(private userService: UserService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUser(this.id).subscribe(user => {this.user = user; if (user == null){this.userExists = false; }});\r\n    this.userService.getPendingHost(this.id).subscribe(pendingHost => this.pendingHost = pendingHost, error => this.pendingHost = null);\r\n\r\n\r\n  }\r\n\r\n  isPendingHost(): boolean{\r\n    if (this.pendingHost != null && !this.user.isHost){\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // used to display verify host button only if the user seeing this page is the admin\r\n  adminLoggedIn(): boolean{\r\n    return (localStorage.getItem('admin') === 'true');\r\n  }\r\n\r\n  verifyHost(): void{\r\n    this.user.isHost = true;\r\n    this.userService.updateUser( this.user , this.user.userId);\r\n    this.userService.deletePendingHost(this.user.userId);\r\n  }\r\n\r\n  GetImageUrl(): string{\r\n    return this.userService.GetImageUrl(this.user.userName);\r\n  }\r\n}\r\n","<h2>User Details</h2>\r\n\r\n<div *ngIf=\"!userExists\"><h3 class=\"warning\">User Doesn't Exist</h3></div>\r\n\r\n<div *ngIf=\"user\">\r\n<img [attr.src]=\"GetImageUrl()\" />\r\n<table>\r\n  <tr>\r\n    <td>Username</td>\r\n    <td>{{user.userName}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>E-Mail</td>\r\n    <td>{{user.email}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>First Name</td>\r\n    <td>{{user.firstName}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Last Name</td>\r\n    <td>{{user.lastName}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Telephone</td>\r\n    <td>{{user.telephone}}</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Is Tenant</td>\r\n    <td *ngIf=\"user.isTenant\">Yes</td>\r\n    <td *ngIf=\"!user.isTenant\">No</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Is Host</td>\r\n    <td *ngIf=\"user.isHost\">Yes</td>\r\n    <td *ngIf=\"!user.isHost\">No</td>\r\n  </tr>\r\n\r\n</table>\r\n\r\n<div class=\"verification\" *ngIf=\"isPendingHost() && adminLoggedIn()\">\r\n  <p>This user wants to be a Host</p>\r\n  <button (click)=\"verifyHost()\">Verify Host</button>\r\n</div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../service/user.service';\nimport {User} from '../../../model/User';\nimport {PendingHost} from '../../../model/PendingHost';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor(private userService: UserService ) { }\n\n  users: User[];\n  pendingHosts: PendingHost[] = [];\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe(users => this.users = users);\n    this.userService.getPendingHosts().subscribe(pendingHosts => {this.pendingHosts = pendingHosts; });\n  }\n\n  // checks if a user is pending host given their id\n  isPendingHost(id: number): boolean{\n    for (let i = 0; i < this.pendingHosts.length; i = i + 1) {\n      if (this.pendingHosts[i].userId === id){\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n}\n","<h2>Users</h2>\r\n\r\n<table class=\"mainTable\">\r\n  <tr class=\"tableHeadingRow\">\r\n    <td class=\"tableHeadingData\"><label>Username</label></td>\r\n    <td class=\"tableHeadingData\"><label>E-Mail</label></td>\r\n  </tr>\r\n    <tr *ngFor=\"let user of users\"  class=\"clickableRow\" routerLink=\"/users/{{user.userId}}\">\r\n      <td *ngIf=\"isPendingHost(user.userId)\" >{{user.userName}} <span id=\"pendingHost\">(Pending Host)</span></td>\r\n      <td *ngIf=\"!isPendingHost(user.userId)\" >{{user.userName}}</td>\r\n      <td >{{user.email}}</td>\r\n    </tr>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {PlaceService} from '../service/place.service';\r\nimport {Place} from '../../model/Place';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-all-places',\r\n  templateUrl: './all-places.component.html',\r\n  styleUrls: ['./all-places.component.css']\r\n})\r\nexport class AllPlacesComponent implements OnInit {\r\n\r\n  places: Place[];\r\n  filteredPlaces: Place[];\r\n  averageStars: number[];\r\n  numOfPlaces: number;\r\n  numOfPages: number;\r\n  currentPage: number;\r\n  filtersShown = false;\r\n\r\n  minPrice = null;\r\n  maxPrice = null;\r\n  additionalCostPerPerson = null;\r\n  type = null;\r\n  minArea = null;\r\n  minNumOfBeds = null;\r\n  minNumOfSleepingRooms = null;\r\n  livingRoom = false;\r\n  wiFi = false;\r\n  airConditioning = false;\r\n  heating = false;\r\n  parking = false;\r\n  elevator = false;\r\n  petsAllowed = false;\r\n  partiesAllowed = false;\r\n  smokingAllowed = false;\r\n\r\n  constructor(private placeService: PlaceService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.placeService.searchPlaces(\r\n      this.route.snapshot.paramMap.get('checkIn'),\r\n      this.route.snapshot.paramMap.get('checkOut'),\r\n      this.route.snapshot.paramMap.get('Country'),\r\n      this.route.snapshot.paramMap.get('City'),\r\n      this.route.snapshot.paramMap.get('District'),\r\n      this.route.snapshot.paramMap.get('maxCapacity')\r\n    ).subscribe(places => {\r\n      this.places = places;\r\n      console.log(this.places);\r\n      this.places = this.places.filter (place => place.minimumRentingDates\r\n        <= this.daysDiff(this.route.snapshot.paramMap.get('checkIn'), this.route.snapshot.paramMap.get('checkOut')));\r\n      this.filteredPlaces = this.places.slice();\r\n      this.numOfPlaces = this.places.length;\r\n      this.getAverageStars();\r\n      this.setNumOfPages();\r\n      this.currentPage = 1;\r\n    });\r\n  }\r\n\r\n  // checks difference in two dates ( used to avoid places with minimum renting dates bigger than reservation)\r\n  daysDiff(checkin: string, checkout: string): number {\r\n    // @ts-ignore\r\n    return Math.round((new Date(checkout) - new Date(checkin)) / (1000 * 60 * 60 * 24) );\r\n  }\r\n\r\n  // filters places according to filter inputs\r\n  getFilteredPlaces(): void{\r\n    this.filteredPlaces = [];\r\n    const length = this.places.length;\r\n    for (let i = 0; i < length; i++) {\r\n      this.filteredPlaces.push(this.places[i]);\r\n    }\r\n\r\n    if (this.minPrice != null) {\r\n      this.filteredPlaces = this.filteredPlaces.filter(place => place.minCost >= this.minPrice);\r\n    }\r\n\r\n    if (this.maxPrice != null) {\r\n      this.filteredPlaces = this.filteredPlaces.filter(place => place.minCost <= this.maxPrice);\r\n    }\r\n\r\n    if (this.type != null && this.type !== 'null') {\r\n      this.filteredPlaces = this.filteredPlaces.filter(place => place.type  === this.type);\r\n    }\r\n\r\n    if (this.additionalCostPerPerson != null) {\r\n      this.filteredPlaces = this.filteredPlaces.filter(place => place.additionalCostPerPerson  <= this.additionalCostPerPerson);\r\n    }\r\n\r\n    if (this.minArea != null){\r\n      this.filteredPlaces = this.filteredPlaces.filter (place => place.area >= this.minArea);\r\n    }\r\n\r\n    if (this.minArea != null){\r\n      this.filteredPlaces = this.filteredPlaces.filter (place => place.area >= this.minArea);\r\n    }\r\n\r\n    if (this.minNumOfBeds != null){\r\n      this.filteredPlaces = this.filteredPlaces.filter (place => place.numberOfBeds >= this.minNumOfBeds);\r\n    }\r\n\r\n    if (this.minNumOfSleepingRooms != null){\r\n      this.filteredPlaces = this.filteredPlaces.filter (place => place.numberOfSleepingRooms >= this.minNumOfSleepingRooms);\r\n    }\r\n\r\n    if (this.minNumOfSleepingRooms != null){\r\n      this.filteredPlaces = this.filteredPlaces.filter (place => place.numberOfSleepingRooms >= this.minNumOfSleepingRooms);\r\n    }\r\n\r\n    if (this.livingRoom){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.livingRoom === true);\r\n    }\r\n\r\n    if (this.wiFi){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.wiFi === true);\r\n    }\r\n\r\n    if (this.airConditioning){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.airConditioning === true);\r\n    }\r\n\r\n    if (this.heating){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.heating === true);\r\n    }\r\n\r\n    if (this.parking){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.parking === true);\r\n    }\r\n\r\n    if (this.elevator){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.elevator === true);\r\n    }\r\n\r\n    if (this.petsAllowed){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.petsAllowed === true);\r\n    }\r\n\r\n    if (this.partiesAllowed){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.partiesAllowed === true);\r\n    }\r\n\r\n    if (this.smokingAllowed){\r\n      this.filteredPlaces = this.filteredPlaces.filter( place => place.smokingAllowed === true);\r\n    }\r\n\r\n\r\n\r\n    this.setNumOfPages();\r\n  }\r\n\r\n  // used for pagination\r\n  setNumOfPages(): void{\r\n    this.numOfPages = Math.ceil(this.filteredPlaces.length / 9 );\r\n  }\r\n\r\n  showFilters(): void{\r\n    this.filtersShown = true;\r\n  }\r\n\r\n  hideFilters(): void{\r\n    this.filtersShown = false;\r\n  }\r\n\r\n  GetImageUrl(id: number): string{\r\n    return this.placeService.GetImageUrl(id.toString());\r\n  }\r\n\r\n  nextPage(): void{\r\n    if (this.currentPage < this.numOfPages){\r\n      this.currentPage ++;\r\n    }\r\n  }\r\n\r\n  previousPage(): void{\r\n    if (this.currentPage > 1){\r\n      this.currentPage --;\r\n    }\r\n  }\r\n\r\n  setPage(i: number): void{\r\n    this.currentPage = i;\r\n  }\r\n\r\n  getAverageStars(): void{\r\n    this.averageStars = [];\r\n    for (let i = 0; i < this.filteredPlaces.length; i++){\r\n      this.placeService.getAverageStars(this.filteredPlaces[i].placeId).subscribe(response =>\r\n        this.averageStars[i] = response);\r\n    }\r\n  }\r\n\r\n  // returns string with rating stars given the rating\r\n  getStarsString(stars: number): string{\r\n    let i: number;\r\n    let starsString = '';\r\n\r\n    if (Math.floor(stars) <= 0.5){\r\n      i = Math.floor(stars);\r\n    }\r\n\r\n    else{\r\n      i = Math.ceil(stars);\r\n    }\r\n\r\n    for (let j = 0 ; j < i; j++){\r\n      starsString += '⭐';\r\n    }\r\n\r\n    return starsString;\r\n  }\r\n\r\n\r\n}\r\n","<div id=\"placesBackground\">\r\n<div id=\"filterSection\">\r\n  <form ngNativeValidate>\r\n    <label class=\"filterLabel\">Minimum Cost</label><br class=\"mediaOnly\">\r\n    <input type=\"number\" [(ngModel)]=\"minPrice\" name=\"minPrice\" ><br class=\"mediaOnly\">\r\n    <label class=\"filterLabel\">Maximum Cost</label><br class=\"mediaOnly\">\r\n    <input type=\"number\" [(ngModel)]=\"maxPrice\" name=\"maxPrice\" ><br class=\"mediaOnly\">\r\n    <button *ngIf=\"!filtersShown\" (click)=\"showFilters()\">Show More Filters</button><br class=\"mediaOnly\">\r\n    <button *ngIf=\" filtersShown\"(click)=\"hideFilters()\">Hide Filters</button><br class=\"mediaOnly\">\r\n    <button (click)=\"getFilteredPlaces()\">Submit Filters</button>\r\n    <div *ngIf=\"filtersShown\">\r\n      <label class=\"filterLabel\">Maximum Additional Cost Per Person</label><br class=\"mediaOnly\">\r\n      <input type=\"number\" [(ngModel)]=\"additionalCostPerPerson\" name=\"additionalCostPerPerson\" ><br>\r\n      <label class=\"filterLabel\">Type</label><br class=\"mediaOnly\">\r\n      <select [(ngModel)]=\"type\" name=\"type\">\r\n        <option value=\"null\">All</option>\r\n        <option value=\"Apartment\">Apartment</option>\r\n        <option value=\"Room\">Room</option>\r\n        <option value=\"Villa\">Villa</option>\r\n        <option value=\"Cottage\">Cottage</option>\r\n        <option value=\"Office\">Office</option>\r\n      </select><br class=\"mediaOnly\"><br>\r\n      <label class=\"filterLabel\">Minimum Area</label><br class=\"mediaOnly\">\r\n      <input type=\"number\" [(ngModel)]=\"minArea\" name=\"minArea\" ><br>\r\n      <label class=\"filterLabel\">Minimum Number Of Beds</label><br class=\"mediaOnly\">\r\n      <input type=\"number\" [(ngModel)]=\"minNumOfBeds\" name=\"minNumOfBeds\" ><br>\r\n      <label class=\"filterLabel\">Minimum Number of Sleeping Rooms</label><br class=\"mediaOnly\">\r\n      <input type=\"number\" [(ngModel)]=\"minNumOfSleepingRooms\" name=\"minNumOfSleepingRooms\" ><br class=\"mediaOnly\">\r\n      <div class=\"checkList\">\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"livingRoom\" name=\"livingRoom\" > <label>Living Room</label><br class=\"mediaOnly\">\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"wiFi\" name=\"wiFi\"><label>Wi Fi</label><br class=\"mediaOnly\">\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"airConditioning\" name=\"airConditioning\"><label>Air Conditioning</label><br class=\"mediaOnly\">\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"heating\" name=\"heating\"><label>Heating</label><br class=\"mediaOnly\">\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"parking\" name=\"parking\"><label>Parking</label><br class=\"mediaOnly\">\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"elevator\" name=\"elevator\"><label>Elevator</label><br class=\"mediaOnly\"><br class=\"wideOnly\">\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"petsAllowed\" name=\"petsAllowed\"><label>Pets Allowed</label><br class=\"mediaOnly\">\r\n        <input type=\"checkbox\" class=\"checkBox\"  [(ngModel)]=\"partiesAllowed\" name=\"partiesAllowed\"><label>Parties Allowed</label><br class=\"mediaOnly\">\r\n        <input type=\"checkbox\" class=\"checkBox\"  [(ngModel)]=\"smokingAllowed\" name=\"smokingAllowed\"><label>Smoking Allowed</label><br class=\"mediaOnly\">\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div id=\"places\">\r\n  <div class=\"placeBox\" *ngFor=\"let place of filteredPlaces | slice:(currentPage-1)*9 :(currentPage-1)*9+9;let i = index;\" routerLink=\"/places/{{place.placeId}}\">\r\n    <h3 class=\"title\">{{place.type}} in {{place.district}}</h3>\r\n    <img [attr.src]=\"GetImageUrl(place.placeId)\" class=\"MainPhoto\" />\r\n    <p class=\"minPrice\">Starting from <span class=\"priceNumber\">{{place.minCost}} &euro;</span></p>\r\n    <p  class=\"minPrice\">Average Rating:\r\n      <span *ngIf=\"averageStars[i]\" class=\"priceNumber\">{{getStarsString(averageStars[i])}}</span>\r\n      <span *ngIf=\"!averageStars[i]\" class=\"priceNumber\">Not Rated</span>\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"pagination\">\r\n<button id=\"previousPage\" (click)=\"previousPage()\">Previous Page</button>\r\n<div class=\"page\">\r\n  <span *ngFor=\"let test of [].constructor(numOfPages); let i = index\">\r\n    <span *ngIf=\"currentPage == i+1\"><button class=\"currentPage\" (click)=\"setPage(i+1)\">{{i+1}}</button></span>\r\n    <span *ngIf=\"currentPage != i+1\"><button (click)=\"setPage(i+1)\">{{i+1}}</button></span>\r\n  </span>\r\n</div>\r\n<button id=\"nextPage\" (click)=\"nextPage()\">Next Page</button>\r\n</div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Place} from '../../../model/Place';\r\nimport {PlaceService} from '../../service/place.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UserService} from '../../service/user.service';\r\nimport {User} from '../../../model/User';\r\nimport {Reservation} from '../../../model/Reservation';\r\nimport {Review} from '../../../model/Review';\r\nimport { MessageService } from 'src/app/service/message.service';\r\nimport {Message} from '../../../model/Message';\r\n\r\ndeclare var ol: any;\r\n@Component({\r\n  selector: 'app-place-details',\r\n  templateUrl: './place-details.component.html',\r\n  styleUrls: ['./place-details.component.css']\r\n})\r\nexport class PlaceDetailsComponent implements OnInit {\r\n\r\n  place: Place;\r\n  user: User;\r\n  reservation: Reservation;\r\n  reviews: Review[];\r\n  private id: string;\r\n  PlacePhotosIds: number[];\r\n  placeNotFound = false;\r\n  invalidReservation = false;\r\n  messageBox = false;\r\n  messageToHost: Message;\r\n\r\n  map: any;\r\n  feature: any;\r\n  layer: any;\r\n  style: any;\r\n\r\n  constructor(private placeService: PlaceService, private userService: UserService,\r\n              private route: ActivatedRoute, private router: Router, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.messageToHost = { messageId: null, senderId: null, receiverId: null, text: null, date: null};\r\n    this.user = {userName: '', password: '', telephone: '', firstName: '', ProfilePhoto: null, email: '', lastName: '',\r\n      isHost: false, isTenant: false, isAdmin: false , userId: null};\r\n    this.userService.findUserId(localStorage.getItem('username')).subscribe(response => {\r\n      this.userService.getUser(response.toString()).subscribe(user => this.user = user);\r\n    });\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.placeService.getReviewsForPlace(this.id).subscribe(reviews => this.reviews = reviews);\r\n    this.placeService.getPlace(this.id).subscribe(place => {\r\n      this.place = place;\r\n\r\n      // map initialization\r\n      this.map = new ol.Map({\r\n        target: 'map',\r\n        layers: [\r\n          new ol.layer.Tile({\r\n            source: new ol.source.OSM()\r\n          })\r\n        ],\r\n        view: new ol.View({\r\n          center: ol.proj.fromLonLat([ this.place.xcoordinate, this.place.ycoordinate]),\r\n          zoom: 15\r\n        })\r\n      });\r\n\r\n      this.feature = new ol.Feature({\r\n        geometry: new ol.geom.Point(ol.proj.fromLonLat([ this.place.xcoordinate, this.place.ycoordinate]))\r\n      });\r\n\r\n      this.style = new ol.style.Style({\r\n        image: new ol.style.Icon({\r\n          scale: 0.02,\r\n          src: '../assets/point.png'\r\n        })\r\n      });\r\n\r\n      this.feature.setStyle(this.style);\r\n\r\n      this.layer = new ol.layer.Vector({\r\n        source: new ol.source.Vector({\r\n          features: [\r\n            this.feature\r\n          ],\r\n          style: this.style\r\n        })\r\n      });\r\n\r\n      this.map.addLayer(this.layer);\r\n    } , error => this.placeNotFound = true);\r\n    this.placeService.GetPlacesPhotosIds(Number(this.id)).subscribe(\r\n      Ids => this.PlacePhotosIds = Ids\r\n    );\r\n    this.setPlacePhotosIds();\r\n  }\r\n\r\n  // when user chooses to reserve\r\n  reserve(): void {\r\n    let checkIn: Date;\r\n    checkIn = new Date(localStorage.getItem('startingDate'));\r\n\r\n    let checkOut: Date;\r\n    checkOut = new Date(localStorage.getItem('endingDate'));\r\n\r\n    let people: number;\r\n    people = Number(localStorage.getItem('numOfPersons'));\r\n\r\n\r\n    this.reservation = {\r\n      reservationId: null,\r\n      userId: this.user.userId,\r\n      placeId: this.place.placeId,\r\n      startingDate: checkIn,\r\n      endingDate: checkOut,\r\n      numberOfPeople: people\r\n    };\r\n\r\n    this.placeService.makeReservation(this.reservation).subscribe(response => {\r\n      if ( response === false ) { this.invalidReservation = true; }\r\n      else { this.router.navigateByUrl('/searchForm'); }\r\n      localStorage.removeItem('startingDate') ;\r\n      localStorage.removeItem('endingDate') ;\r\n      localStorage.removeItem('numOfPersons') ;\r\n    });\r\n  }\r\n\r\n  forReservation(): boolean{\r\n    return (this.user.isTenant && (localStorage.getItem('startingDate') != null));\r\n  }\r\n\r\n  setPlacePhotosIds(): void{\r\n    this.placeService.GetPlacesPhotosIds(Number(this.id)).subscribe(\r\n      Ids => this.PlacePhotosIds = Ids\r\n    );\r\n  }\r\n\r\n  GetImageUrl(): string{\r\n    return this.placeService.GetImageUrl(this.id);\r\n  }\r\n\r\n  FullsizeImage(PlacePhotosId: number): void {\r\n    window.open(this.placeService.GetPlacePhotoUrl(PlacePhotosId));\r\n  }\r\n\r\n  async sendMessageToHost(): Promise<void> {\r\n    this.messageToHost.senderId = await this.userService.getUserId(localStorage.getItem('username'));\r\n    this.messageToHost.receiverId = this.place.hostId;\r\n    this.messageToHost.date = new Date();\r\n    this.messageService.SendMessage(this.messageToHost).subscribe( res =>{\r\n      window.location.reload();\r\n      alert('Message send successfully');\r\n    });\r\n  }\r\n}\r\n","<h2>Place Details</h2>\r\n\r\n<div *ngIf=\"placeNotFound\"><h2>No Such Place Belongs to You</h2></div>\r\n\r\n<div class=\"placeSection\" *ngIf=\"!placeNotFound\">\r\n\r\n\r\n  <h3>{{place.type}} In {{place.district}} </h3>\r\n  <h4>{{place.address}} / {{place.city}} / {{place.country}}</h4>\r\n  <h4>Place ID : {{place.placeId}}</h4>\r\n\r\n  <img [attr.src]=\"GetImageUrl()\" class=\"MainPhoto\" />\r\n  <br>\r\n\r\n  <button *ngIf=\"forReservation()\" (click)=\"reserve()\">Reserve Place</button>\r\n  <button routerLink=\"/users/{{place.hostId}}\">View Host's Profile</button>\r\n\r\n  <div *ngIf=\"!messageBox\">\r\n    <button (click)=\"messageBox=true\"> Send message to host</button>\r\n  </div>\r\n  <div *ngIf=\"messageBox\">\r\n    <textarea id=\"messageBox\" [(ngModel)]=\"messageToHost.text\" name=\"MessageText\" required></textarea>\r\n    <br><button (click)=\"sendMessageToHost()\"> Send it!</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"invalidReservation\" class=\"warning\">Place Not Available for this Reservation</div>\r\n  <h3>Gallery</h3>\r\n  <div class=\"row\">\r\n    <div *ngFor=\"let PlacePhotosId of PlacePhotosIds\">\r\n      <img [attr.src]=\"this.placeService.GetPlacePhotoUrl(PlacePhotosId)\" (click)=\"FullsizeImage(PlacePhotosId)\"/>\r\n    </div>\r\n  </div>\r\n\r\n  <h3>Location</h3>\r\n  <div id=\"map\" class=\"map\"></div>\r\n\r\n  <h3>Information</h3>\r\n\r\n  <div class=\"detailsSection\">\r\n\r\n    <label>Description</label><br>\r\n    <p>{{place.description}}</p><hr>\r\n\r\n    <label>Transportation</label><br>\r\n    <p>{{place.transportation}}</p><hr>\r\n\r\n    <label>Area</label><br>\r\n    <p>{{place.area}} m<sup>2</sup></p><hr>\r\n\r\n    <label>Minimum Cost</label><br>\r\n    <p>{{place.minCost}} &euro;</p><hr>\r\n\r\n    <label>Additional Cost Per Person</label><br>\r\n    <p>{{place.additionalCostPerPerson}} &euro;</p><hr>\r\n\r\n    <label>Maximum Capacity</label><br>\r\n    <p>{{place.maxCapacity}}</p><hr>\r\n\r\n    <label>Number of Beds</label><br>\r\n    <p>{{place.numberOfBeds}}</p><hr>\r\n\r\n    <label>Number of Sleeping Rooms</label><br>\r\n    <p>{{place.numberOfSleepingRooms}}</p><hr>\r\n\r\n    <label>Minimum Renting Days</label><br>\r\n    <p>{{place.minimumRentingDates}}</p><hr>\r\n\r\n    <div *ngIf=\"place.livingRoom\"><p>Living Room: Yes</p></div>\r\n    <div *ngIf=\"!place.livingRoom\"><p>Living Room: No</p></div>\r\n\r\n    <div *ngIf=\"place.wiFi\"><p>Wi-Fi: Yes</p></div>\r\n    <div *ngIf=\"!place.wiFi\"><p>Wi-Fi: No</p></div>\r\n\r\n    <div *ngIf=\"place.airConditioning\"><p>Air Conditioning: Yes</p></div>\r\n    <div *ngIf=\"place.airConditioning\"><p>Air Conditioning: No</p></div>\r\n\r\n    <div *ngIf=\"place.heating\"><p>Heating: Yes</p></div>\r\n    <div *ngIf=\"!place.heating\"><p>Heating: No</p></div>\r\n\r\n    <div *ngIf=\"place.parking\"><p>Parking: Yes</p></div>\r\n    <div *ngIf=\"!place.parking\"><p>Parking: No</p></div>\r\n\r\n    <div *ngIf=\"place.elevator\"><p>Elevator: Yes</p></div>\r\n    <div *ngIf=\"!place.elevator\"><p>Elevator: No</p></div>\r\n\r\n    <div *ngIf=\"place.petsAllowed\"><p>Pets Allowed: Yes</p></div>\r\n    <div *ngIf=\"!place.petsAllowed\"><p>Pets Allowed: No</p></div>\r\n\r\n    <div *ngIf=\"place.partiesAllowed\"><p>Parties Allowed: Yes</p></div>\r\n    <div *ngIf=\"!place.partiesAllowed\"><p>Parties Allowed: No</p></div>\r\n\r\n    <div *ngIf=\"place.smokingAllowed\"><p>Smoking Allowed: Yes</p></div>\r\n    <div *ngIf=\"!place.smokingAllowed\"><p>Smoking Allowed: No</p></div>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div id=\"reviewSection\">\r\n  <h2>Reviews</h2>\r\n  <div *ngFor=\"let review of reviews\" class=\"review\">\r\n    <p>{{review.reviewText}}</p><br>\r\n    <label>Number Of Stars: {{review.reviewStars}}</label><hr>\r\n  </div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\nimport {NavigationStart, Router} from '@angular/router';\nimport { UserService } from './service/user.service';\nimport {User} from '../model/User';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'Placie';\n\n  user: User; // Logged In User's object\n  registration = false; // Boolean represents if the user is in the register page (Needed to hide menu bar)\n\n\n  constructor(private router: Router, private UserSer: UserService) {\n    this.user = {userName: '', password: '', telephone: '', firstName: '', ProfilePhoto: null, email: '', lastName: '',\n      isHost: false, isTenant: false, isAdmin: false , userId: null}; // Dummy user object initialization\n\n    router.events.forEach((event) => {\n      // if user navigates to register page, then registration boolean becomes true\n      if (event instanceof NavigationStart) {\n        this.registration = event.url === '/register';\n      }\n    });\n\n    this.GetUser();\n  }\n\n  // Puts logged in user's information to User object\n  GetUser(): void{\n    this.UserSer.findUserId(localStorage.getItem('username')).subscribe(response => {\n      this.UserSer.getUser(response.toString()).subscribe(user =>\n      {\n        this.user = user;\n        // saves user's roles to local storage\n        localStorage.setItem('admin', JSON.stringify(user.isAdmin));\n        localStorage.setItem('host', JSON.stringify(user.isHost));\n        localStorage.setItem('tenant', JSON.stringify(user.isTenant));\n\n        // Redirection to admin page for admins\n        if (user.isAdmin === true){\n          this.router.navigateByUrl('/administrator');\n        }\n      });\n    });\n  }\n\n  GetUsername(): string{\n    if (this.UserSer.LoggedIn()) { } {\n      return localStorage.getItem('username');\n    }\n    return null;\n  }\n\n  Login(event: any) {\n    this.UserSer.LoginRequest(event.target.username.value, event.target.password.value)\n      .subscribe(\n        response => {\n          localStorage.setItem('token', response.headers.get('Authorization'));\n          localStorage.setItem('username', event.target.username.value);\n          this.GetUser();\n          // Redirection for admins happens in the above function\n        }, error => {\n          if (error.status === 403) {\n            alert('Invalid username and/or password');\n          }\n        }\n      );\n  }\n\n  Logout(event: any) {\n    localStorage.clear();\n    this.UserSer.Logout();\n    window.location.href = '/'; // Reload app to search form component\n\n  }\n\n  LoggedIn(): boolean{\n    return this.UserSer.LoggedIn();\n  }\n\n  GoToHomePage(): void {\n    this.router.navigateByUrl('/searchForm');\n  }\n}\n","<div id=\"homePage\">\r\n<div class=\"logo\">\r\n  <img  src=\"../assets/logo.svg\" alt=\"Placie\" height=\"60\" width=\"200\" id=\"icon\" (click)=\"GoToHomePage()\"/>\r\n</div>\r\n\r\n<div *ngIf=\"!registration\">\r\n  <ul>\r\n    <li *ngIf=\"LoggedIn() && user.isAdmin\" class =\"link\"><a routerLink=\"/administrator\">Administrator Section</a></li>\r\n    <li *ngIf=\"LoggedIn() && user.isHost\" class =\"link\"><a routerLink=\"/host\">Host Section</a></li>\r\n    <li *ngIf=\"LoggedIn() && user.isTenant\" class =\"link\"><a routerLink=\"/reservations\">Tenant Section</a></li>\r\n    <li *ngIf=\"LoggedIn()\" class =\"right\"><button (click)=\"Logout($event)\"> Logout </button></li>\r\n    <li *ngIf=\"LoggedIn()\" class =\"right\"><button routerLink=\"/messages\">Messages</button></li>\r\n    <li *ngIf=\"LoggedIn()\" class =\"right\"><button routerLink=\"/editAccount\"> My Account </button></li>\r\n    <li *ngIf=\"LoggedIn()\" id=\"username\"><label>Welcome {{GetUsername()}}!</label></li>\r\n    <li *ngIf=\"!LoggedIn()\">\r\n      <form (ngSubmit)=\"Login($event)\">\r\n        <label> Username </label>\r\n        <input name=\"username\"  type=\"text\">\r\n        <label> Password </label>\r\n        <input name=\"password\" type=\"password\">\r\n        <button> Login </button>\r\n      </form>\r\n    </li>\r\n    <li *ngIf=\"!LoggedIn()\" class=\"right\"><button routerLink=\"/register\">Register</button></li>\r\n  </ul>\r\n</div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport { SiteRoutes } from './app.routes';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SearchFormComponent } from './search-form/search-form.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { AdministratorComponent } from './administrator/administrator.component';\r\nimport { UsersComponent } from './administrator/users/users.component';\r\nimport { UserDetailsComponent } from './administrator/users/user-details/user-details.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { NewMessageComponent } from './messages/new-message/new-message.component';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { ExportDataComponent } from './administrator/export-data/export-data.component';\r\nimport { HostComponent } from './host/host.component';\r\nimport { PlacesComponent } from './host/places/places.component';\r\nimport { EditPlaceComponent } from './host/places/edit-place/edit-place.component';\r\nimport { NewPlaceComponent } from './host/new-place/new-place.component';\r\nimport { AllPlacesComponent } from './all-places/all-places.component';\r\nimport { PlaceDetailsComponent } from './all-places/place-details/place-details.component';\r\nimport { TenantComponent } from './tenant/tenant.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    SearchFormComponent,\r\n    AdministratorComponent,\r\n    UsersComponent,\r\n    UserDetailsComponent,\r\n    MessagesComponent,\r\n    NewMessageComponent,\r\n    UserEditComponent,\r\n    ExportDataComponent,\r\n    HostComponent,\r\n    PlacesComponent,\r\n    EditPlaceComponent,\r\n    NewPlaceComponent,\r\n    AllPlacesComponent,\r\n    PlaceDetailsComponent,\r\n    TenantComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(SiteRoutes),\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import {Routes} from '@angular/router';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {SearchFormComponent} from './search-form/search-form.component';\r\nimport {AdministratorComponent} from './administrator/administrator.component';\r\nimport {UsersComponent} from './administrator/users/users.component';\r\nimport {UserDetailsComponent} from './administrator/users/user-details/user-details.component';\r\nimport {MessagesComponent} from './messages/messages.component';\r\nimport {NewMessageComponent} from './messages/new-message/new-message.component';\r\nimport {UserEditComponent} from './user-edit/user-edit.component';\r\nimport {ExportDataComponent} from './administrator/export-data/export-data.component';\r\nimport {AdministratorGuardService} from './service/administrator-guard.service';\r\nimport {UserGuardService} from './service/user-guard.service';\r\nimport {HostComponent} from './host/host.component';\r\nimport {PlacesComponent} from './host/places/places.component';\r\nimport {NewPlaceComponent} from './host/new-place/new-place.component';\r\nimport {EditPlaceComponent} from './host/places/edit-place/edit-place.component';\r\nimport {HostGuardService} from './service/host-guard.service';\r\nimport {AllPlacesComponent} from './all-places/all-places.component';\r\nimport {PlaceDetailsComponent} from './all-places/place-details/place-details.component';\r\nimport {TenantComponent} from './tenant/tenant.component';\r\nimport {TenantGuardService} from './service/tenant-guard.service';\r\n\r\nexport const SiteRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/searchForm',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'searchForm',\r\n    component: SearchFormComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'administrator',\r\n    component: AdministratorComponent,\r\n    canActivate: [AdministratorGuardService]\r\n  },\r\n  {\r\n    path: 'users',\r\n    component: UsersComponent,\r\n    canActivate: [AdministratorGuardService]\r\n  },\r\n  {\r\n    path: 'exportData',\r\n    component: ExportDataComponent,\r\n    canActivate: [AdministratorGuardService]\r\n  },\r\n  {\r\n    path: 'users/:id',\r\n    component: UserDetailsComponent\r\n  },\r\n  {\r\n    path: 'host',\r\n    component: HostComponent,\r\n    canActivate: [HostGuardService]\r\n  },\r\n  {\r\n    path: 'myPlaces',\r\n    component: PlacesComponent,\r\n    canActivate: [HostGuardService]\r\n  },\r\n  {\r\n    path: 'newPlace',\r\n    component: NewPlaceComponent,\r\n    canActivate: [HostGuardService]\r\n  },\r\n  {\r\n    path: 'editPlaces/:id',\r\n    component: EditPlaceComponent,\r\n    canActivate: [HostGuardService]\r\n  }\r\n  ,\r\n  {\r\n    path: 'editAccount',\r\n    component: UserEditComponent,\r\n    canActivate: [UserGuardService]\r\n  },\r\n  {\r\n    path: 'messages',\r\n    component: MessagesComponent,\r\n    canActivate: [UserGuardService],\r\n    children: [\r\n      {\r\n        path: 'NewMessage',\r\n        component: NewMessageComponent,\r\n        canActivate: [UserGuardService]\r\n      }]\r\n\r\n  },\r\n  {\r\n    path: 'places/:checkIn/:checkOut/:Country/:City/:District/:maxCapacity',\r\n    component: AllPlacesComponent\r\n  }\r\n  ,\r\n  {\r\n    path: 'places/:id',\r\n    component: PlaceDetailsComponent\r\n  },\r\n  {\r\n    path: 'reservations',\r\n    component: TenantComponent,\r\n    canActivate: [TenantGuardService]\r\n  }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-host',\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.css']\n})\nexport class HostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"hostPanel\">\r\n  <button routerLink=\"/newPlace\" class=\"panelButton\"><label class=\"panelLabel\">New Place</label></button>\r\n  <button routerLink=\"/myPlaces\" class=\"panelButton\"><label class=\"panelLabel\">My Places</label></button>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Place} from '../../../model/Place';\r\nimport {PlaceService} from '../../service/place.service';\r\n\r\n// used for the open layers map\r\ndeclare var ol: any;\r\n\r\n@Component({\r\n  selector: 'app-new-place',\r\n  templateUrl: './new-place.component.html',\r\n  styleUrls: ['./new-place.component.css']\r\n})\r\nexport class NewPlaceComponent implements OnInit {\r\n\r\n  place: Place;\r\n\r\n  attemptedUpload = false;\r\n  imageFile: File;\r\n  ImageFileType: string;\r\n  InvalidFileType = false;\r\n  ImageTooLarge = false;\r\n\r\n  coordinate: any;\r\n  map: any;\r\n  feature: any;\r\n  layer: any;\r\n  style: any;\r\n\r\n  constructor(private placeService: PlaceService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // initializes the map\r\n    this.layer = new ol.layer.Vector({\r\n      source: new ol.source.Vector({\r\n        features: [\r\n          new ol.Feature()\r\n        ]\r\n      })\r\n    });\r\n\r\n    this.map = new ol.Map({\r\n      target: 'map',\r\n      layers: [\r\n        new ol.layer.Tile({\r\n          source: new ol.source.OSM()\r\n        })\r\n      ],\r\n      view: new ol.View({\r\n        center: ol.proj.fromLonLat([ 23.726110, 37.970833]),\r\n        zoom: 1\r\n      })\r\n    });\r\n\r\n\r\n\r\n    this.place = {\r\n      placeId : null ,\r\n      hostId: null ,\r\n      mainPhotoUrl: null,\r\n      country: '',\r\n      city: '',\r\n      district: '',\r\n      address: '',\r\n      xcoordinate: null,\r\n      ycoordinate: null,\r\n      transportation: '',\r\n      description: '',\r\n      type: '',\r\n      area: null,\r\n      minCost: null,\r\n      additionalCostPerPerson: null,\r\n      maxCapacity: null,\r\n      numberOfBeds: null,\r\n      numberOfSleepingRooms: null,\r\n      minimumRentingDates: null,\r\n      livingRoom: false,\r\n      wiFi: false,\r\n      airConditioning : false,\r\n      heating: false,\r\n      parking: false,\r\n      elevator: false,\r\n      petsAllowed: false,\r\n      partiesAllowed: false,\r\n      smokingAllowed: false\r\n    };\r\n    this.InvalidFileType = false;\r\n    this.ImageTooLarge = false;\r\n\r\n\r\n  }\r\n\r\n  // when user clicks on the map , coordinates are adjusted\r\n  getCoordinates(event: any): void{\r\n    this.coordinate = this.map.getEventCoordinate(event);\r\n    console.log(ol.proj.transform(this.coordinate , 'EPSG:3857', 'EPSG:4326'));\r\n    this.layer.getSource().clear();\r\n\r\n    this.feature = new ol.Feature({\r\n      geometry: new ol.geom.Point(ol.proj.fromLonLat(ol.proj.transform(this.coordinate , 'EPSG:3857', 'EPSG:4326')))\r\n    });\r\n\r\n    this.style = new ol.style.Style({\r\n      image: new ol.style.Icon({\r\n        scale: 0.02,\r\n        src: '../assets/point.png'\r\n      })\r\n    });\r\n\r\n    this.feature.setStyle(this.style);\r\n\r\n    this.layer = new ol.layer.Vector({\r\n      source: new ol.source.Vector({\r\n        features: [\r\n          this.feature\r\n        ],\r\n        style: this.style\r\n      })\r\n    });\r\n\r\n    this.map.addLayer(this.layer);\r\n    this.place.xcoordinate = ol.proj.transform(this.coordinate, 'EPSG:3857', 'EPSG:4326')[0];\r\n    this.place.ycoordinate = ol.proj.transform(this.coordinate, 'EPSG:3857', 'EPSG:4326')[1];\r\n\r\n  }\r\n\r\n  // used to upload the new place\r\n  uploadPlace(): void{\r\n    this.attemptedUpload = true;\r\n    if (this.validInputs() && this.locationPicked()){\r\n      this.placeService.post(this.place).subscribe(\r\n        result => {\r\n          window.location.href = '/myPlaces';\r\n          if (this.imageFile != null) {\r\n            this.placeService.UploadMainImage(result.placeId, this.imageFile).subscribe();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validInputs(): boolean{\r\n    return ( this.place.area > 0 && this.place.minCost > 0 && this.place.additionalCostPerPerson >= 0\r\n            && this.place.maxCapacity > 0 && this.place.numberOfBeds >= 0 && this.place.numberOfSleepingRooms >= 0);\r\n  }\r\n\r\n  locationPicked(): boolean{\r\n    return (this.place.xcoordinate != null);\r\n  }\r\n\r\n  private CheckImageType(file: File): string{\r\n    let FileType = '';\r\n    let Index: number = file.name.length;\r\n\r\n    while (file.name.charAt(Index) !== '.' || Index < 0 ){\r\n      FileType = file.name.charAt(Index) + FileType;\r\n      Index--;\r\n    }\r\n    FileType = file.name.charAt(Index) + FileType; // '.'\r\n\r\n    switch (FileType) {\r\n      case '.png':\r\n        return '.png';\r\n      case '.jpg':\r\n        return '.jpg';\r\n      case '.jpeg':\r\n        return '.jpeg';\r\n      case '.gif':\r\n        return '.gif';\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  uploadPhoto(event): void{\r\n    this.ImageFileType = this.CheckImageType(event.target.files[0]);\r\n\r\n    if (event.target.files[0].size > 10000000){\r\n      this.imageFile = null;\r\n      this.ImageTooLarge = true;\r\n      return;\r\n    }else { this.ImageTooLarge = false; }\r\n\r\n    if ( this.ImageFileType !== null){\r\n      this.imageFile = event.target.files[0];\r\n      this.InvalidFileType = false;\r\n    }else{\r\n      this.imageFile = null;\r\n      this.InvalidFileType = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<h2>New Place's Details</h2>\n<div id=\"newPlaceForm\">\n  <form ngNativeValidate>\n\n    <label>Type</label><br>\n    <select [(ngModel)]=\"place.type\" name=\"type\">\n      <option value=\"Apartment\">Apartment</option>\n      <option value=\"Room\">Room</option>\n      <option value=\"Villa\">Villa</option>\n      <option value=\"Cottage\">Cottage</option>\n      <option value=\"Office\">Office</option>\n    </select><br>\n\n    <label>Address</label><br>\n    <input type=\"text\" class=\"textInput\" [(ngModel)]=\"place.address\" name=\"address\" required> <br>\n\n    <label>District</label><br>\n    <input type=\"text\" class=\"textInput\" [(ngModel)]=\"place.district\" name=\"district\" required> <br>\n\n    <label>City</label><br>\n    <input type=\"text\" class=\"textInput\" [(ngModel)]=\"place.city\" name=\"city\" required> <br>\n\n    <label>Country</label><br>\n    <input type=\"text\" class=\"textInput\" [(ngModel)]=\"place.country\" name=\"country\" required> <br>\n\n    <label>Map Location</label><br>\n    <div id=\"map\" class=\"map\" (click)=\"getCoordinates($event)\"></div>\n\n    <br>\n    <input type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\" #imageSelector style=\"display: none\" (change)=\"uploadPhoto($event)\">\n    <button type=\"button\" (click)=\"imageSelector.click()\">Upload Photo</button>\n    <div *ngIf=\"InvalidFileType\" [className]=\"'warning'\"><p> Please choose an image file such as .png .jpg .jpeg .gif</p></div>\n    <div *ngIf=\"ImageTooLarge\" [className]=\"'warning'\"><p> The file you selected is too large (maximum file size is 10mb)</p></div>\n    <br><br>\n\n    <label>Description</label><br>\n    <textarea [(ngModel)]=\"place.description\" name=\"description\" required></textarea> <br>\n\n    <label>Transportation</label><br>\n    <textarea [(ngModel)]=\"place.transportation\" name=\"transportation\" required></textarea> <br>\n\n    <label>Area</label><br>\n    <input type=\"number\" [(ngModel)]=\"place.area\" name=\"area\" min=\"0\"  required> <br>\n\n    <label>Minimum Cost</label><br>\n    <input type=\"number\" [(ngModel)]=\"place.minCost\" name=\"minCost\" min=\"0\" step=\"0.01\" required> <br>\n\n    <label>Additional Cost Per Person</label><br>\n    <input type=\"number\" [(ngModel)]=\"place.additionalCostPerPerson\" name=\"addCostPerPerson\" min=\"0\" step=\"0.01\" required> <br>\n\n    <label>Maximum Capacity</label><br>\n    <input type=\"number\" [(ngModel)]=\"place.maxCapacity\" name=\"maxCapacity\" min=\"1\" step=\"1\" required> <br>\n\n    <label>Number of Beds</label><br>\n    <input type=\"number\" [(ngModel)]=\"place.numberOfBeds\" name=\"numOfBeds\" min=\"0\" step=\"1\"  required> <br>\n\n    <label>Number of Sleeping Rooms</label><br>\n    <input type=\"number\" [(ngModel)]=\"place.numberOfSleepingRooms\" name=\"numOfSleepingRooms\" min=\"0\" step=\"1\" required> <br>\n\n    <label>Minimum Renting Days</label><br>\n    <input type=\"number\" [(ngModel)]=\"place.minimumRentingDates\" name=\"minRentingDates\" min=\"1\" step=\"1\" required> <br>\n\n    <div class=\"checkList\">\n      <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.livingRoom\" name=\"livingRoom\" > <label>Living Room</label><br>\n      <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.wiFi\" name=\"wiFi\"><label>Wi Fi</label><br>\n      <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.airConditioning\" name=\"airConditioning\"><label>Air Conditioning</label><br>\n      <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.heating\" name=\"heating\"><label>Heating</label><br>\n      <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.parking\" name=\"parking\"><label>Parking</label><br>\n      <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.elevator\" name=\"elevator\"><label>Elevator</label><br>\n      <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.petsAllowed\" name=\"petsAllowed\"><label>Pets Allowed</label><br>\n      <input type=\"checkbox\" class=\"checkBox\"  [(ngModel)]=\"place.partiesAllowed\" name=\"partiesAllowed\"><label>Parties Allowed</label><br>\n      <input type=\"checkbox\" class=\"checkBox\"  [(ngModel)]=\"place.smokingAllowed\" name=\"smokingAllowed\"><label>Smoking Allowed</label><br>\n    </div>\n\n\n    <div *ngIf=\"!locationPicked() && attemptedUpload\"><p class=\"warning\">Please Choose A Location in the Map Above</p></div>\n    <button (click)=\"uploadPlace()\">Upload Place</button>\n  </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport {PlaceService} from '../../../service/place.service';\r\nimport {Place} from '../../../../model/Place';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Availability} from '../../../../model/Availability';\r\nimport {Reservation} from '../../../../model/Reservation';\r\n\r\ndeclare var ol: any;\r\n@Component({\r\n  selector: 'app-place-details',\r\n  templateUrl: './edit-place.component.html',\r\n  styleUrls: ['./edit-place.component.css']\r\n})\r\nexport class EditPlaceComponent implements OnInit {\r\n\r\n  place: Place;\r\n  availability: Availability;\r\n  availabilities: Availability[];\r\n  reservations: Reservation[];\r\n  private id: string;\r\n  placeNotFound = false;\r\n  imageFile: File;\r\n  private ImageFileType: string;\r\n  InvalidFileType = false;\r\n  ImageTooLarge = false;\r\n  successfulUpdate = false;\r\n  attemptedUpdate = false;\r\n  PlacePhotosIds: number[];\r\n\r\n  coordinate: any;\r\n  map: any;\r\n  feature: any;\r\n  layer: any;\r\n  style: any;\r\n\r\n  constructor(private placeService: PlaceService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.availability = new Availability();\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.placeService.ReservationsFor(this.id).subscribe(reservations => this.reservations = reservations);\r\n    this.placeService.getPlace(this.id).subscribe(place => {\r\n      this.place = place;\r\n\r\n      this.map = new ol.Map({\r\n        target: 'map',\r\n        layers: [\r\n          new ol.layer.Tile({\r\n            source: new ol.source.OSM()\r\n          })\r\n        ],\r\n        view: new ol.View({\r\n          center: ol.proj.fromLonLat([ this.place.xcoordinate, this.place.ycoordinate]),\r\n          zoom: 15\r\n        })\r\n      });\r\n\r\n      this.feature = new ol.Feature({\r\n        geometry: new ol.geom.Point(ol.proj.fromLonLat([ this.place.xcoordinate, this.place.ycoordinate]))\r\n      });\r\n\r\n      this.style = new ol.style.Style({\r\n        image: new ol.style.Icon({\r\n          scale: 0.02,\r\n          src: '../assets/point.png'\r\n        })\r\n      });\r\n\r\n      this.feature.setStyle(this.style);\r\n\r\n      this.layer = new ol.layer.Vector({\r\n        source: new ol.source.Vector({\r\n          features: [\r\n            this.feature\r\n          ],\r\n          style: this.style\r\n        })\r\n      });\r\n\r\n      this.map.addLayer(this.layer);\r\n      this.refreshAvailabilities();\r\n    } , error => this.placeNotFound = true);\r\n\r\n    this.setPlacePhotosIds();\r\n  }\r\n\r\n  setPlacePhotosIds(): void{\r\n    this.placeService.GetPlacesPhotosIds(Number(this.id)).subscribe(\r\n      Ids => this.PlacePhotosIds = Ids\r\n    );\r\n  }\r\n\r\n\r\n  updatePlace(): void {\r\n    this.attemptedUpdate = true;\r\n    if (this.validInputs()) {\r\n      this.placeService.updatePlace(this.place, this.place.placeId.toString()).subscribe(response => {\r\n        this.successfulUpdate = true;\r\n        window.location.href = '/myPlaces';\r\n      });\r\n    }\r\n  }\r\n\r\n  uploadAvailability(): void{\r\n    console.log(this.availability.endingDate);\r\n    this.availability.placeId = this.place.placeId;\r\n    if (this.availability.startingDate < this.availability.endingDate) {\r\n      this.placeService.uploadAvailability(this.availability).subscribe(response => this.refreshAvailabilities());\r\n    }\r\n  }\r\n\r\n  deleteAvailability(id: number): void{\r\n    this.placeService.deleteAvailability(id.toString()).subscribe();\r\n    this.refreshAvailabilities();\r\n  }\r\n\r\n  refreshAvailabilities(): void{\r\n    this.placeService.getAvailabilitiesFor(this.place.placeId.toString()).subscribe(response => this.availabilities = response);\r\n  }\r\n\r\n  validInputs(): boolean{\r\n    return ( this.place.area > 0 && this.place.minCost > 0 && this.place.additionalCostPerPerson >= 0\r\n      && this.place.maxCapacity > 0 && this.place.numberOfBeds >= 0 && this.place.numberOfSleepingRooms >= 0);\r\n  }\r\n\r\n  private CheckImageType(file: File): string{\r\n    let FileType = '';\r\n    let Index: number = file.name.length;\r\n\r\n    while (file.name.charAt(Index) !== '.' || Index < 0 ){\r\n      FileType = file.name.charAt(Index) + FileType;\r\n      Index--;\r\n    }\r\n    FileType = file.name.charAt(Index) + FileType; // '.'\r\n\r\n    switch (FileType) {\r\n      case '.png':\r\n        return '.png';\r\n      case '.jpg':\r\n        return '.jpg';\r\n      case '.jpeg':\r\n        return '.jpeg';\r\n      case '.gif':\r\n        return '.gif';\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  private CheckPhoto(file: File): boolean{\r\n    this.ImageFileType = this.CheckImageType(file);\r\n\r\n    if (file.size > 10000000){\r\n      this.imageFile = null;\r\n      this.ImageTooLarge = true;\r\n      return false;\r\n    }else { this.ImageTooLarge = false; }\r\n\r\n    if ( this.ImageFileType === null){\r\n      this.imageFile = null;\r\n      this.InvalidFileType = true;\r\n      return false;\r\n    }else{\r\n      this.imageFile = file;\r\n      this.InvalidFileType = false;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  updateMainPhoto(event): void{\r\n    if (this.CheckPhoto(event.target.files[0])){\r\n      this.placeService.UploadMainImage( Number(this.id), this.imageFile).subscribe(\r\n        r => window.location.reload()\r\n      );\r\n    }\r\n  }\r\n\r\n  GetImageUrl(): string{\r\n    return this.placeService.GetImageUrl(this.id);\r\n  }\r\n\r\n  uploadPlacePhoto(event): void{\r\n    console.log('Hello');\r\n    if (this.CheckPhoto(event.target.files[0])){\r\n      this.placeService.UploadImage(Number(this.id), this.imageFile).subscribe(\r\n        end => {this.setPlacePhotosIds(); console.log(this.PlacePhotosIds); }\r\n      );\r\n    }\r\n  }\r\n\r\n  FullsizeImage(PlacePhotosId: number): void {\r\n    window.open(this.placeService.GetPlacePhotoUrl(PlacePhotosId));\r\n  }\r\n}\r\n","<h2>Edit Place Details</h2>\r\n\r\n<div *ngIf=\"placeNotFound\"><h2>No Such Place Belongs to You</h2></div>\r\n\r\n<div class=\"editSection\" *ngIf=\"!placeNotFound\">\r\n\r\n  <h2>{{place.type}} In {{place.district}} </h2>\r\n  <h2>{{place.address}} / {{place.city}} / {{place.country}}</h2>\r\n  <h2>Place ID : {{place.placeId}}</h2>\r\n\r\n\r\n  <img [attr.src]=\"GetImageUrl()\" class=\"MainPhoto\" />\r\n  <input type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\" #imageSelector1 style=\"display: none\"  (change)=\"updateMainPhoto($event)\">\r\n  <button type=\"button\" (click)=\"imageSelector1.click()\">Update main photo</button>\r\n\r\n  <br><br>\r\n\r\n  <div>\r\n    <div class=\"row\">\r\n     <div *ngFor=\"let PlacePhotosId of PlacePhotosIds\">\r\n       <img [attr.src]=\"this.placeService.GetPlacePhotoUrl(PlacePhotosId)\" (click)=\"FullsizeImage(PlacePhotosId)\"/>\r\n      </div>\r\n    </div>\r\n\r\n    <input type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\" #imageSelector2 style=\"display: none\" (change)=\"uploadPlacePhoto($event)\">\r\n    <button type=\"button\" (click)=\"imageSelector2.click()\">Upload another photo</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"InvalidFileType\" [className]=\"'warning'\"><p> Please choose an image file such as .png .jpg .jpeg .gif</p></div>\r\n  <div *ngIf=\"ImageTooLarge\" [className]=\"'warning'\"><p> The file you selected is too large (maximum file size is 10mb)</p></div>\r\n\r\n\r\n  <div id=\"map\" class=\"map\"></div>\r\n  <div class=\"frame\">\r\n    <form ngNativeValidate>\r\n      <h3> Edit Place's Details </h3>\r\n\r\n      <label>Description</label><br>\r\n      <textarea [(ngModel)]=\"place.description\" name=\"description\" required></textarea> <br>\r\n\r\n      <label>Transportation</label><br>\r\n      <textarea [(ngModel)]=\"place.transportation\" name=\"transportation\" required></textarea> <br>\r\n\r\n      <label>Area</label><br>\r\n      <input type=\"number\" [(ngModel)]=\"place.area\" name=\"area\" min=\"0\"  required> <br>\r\n\r\n      <label>Minimum Cost</label><br>\r\n      <input type=\"number\" [(ngModel)]=\"place.minCost\" name=\"minCost\" min=\"0\" step=\"0.01\" required> <br>\r\n\r\n      <label>Additional Cost Per Person</label><br>\r\n      <input type=\"number\" [(ngModel)]=\"place.additionalCostPerPerson\" name=\"addCostPerPerson\" min=\"0\" step=\"0.01\" required> <br>\r\n\r\n      <label>Maximum Capacity</label><br>\r\n      <input type=\"number\" [(ngModel)]=\"place.maxCapacity\" name=\"maxCapacity\" min=\"1\" step=\"1\" required> <br>\r\n\r\n      <label>Number of Beds</label><br>\r\n      <input type=\"number\" [(ngModel)]=\"place.numberOfBeds\" name=\"numOfBeds\" min=\"0\" step=\"1\"  required> <br>\r\n\r\n      <label>Number of Sleeping Rooms</label><br>\r\n      <input type=\"number\" [(ngModel)]=\"place.numberOfSleepingRooms\" name=\"numOfSleepingRooms\" min=\"0\" step=\"1\" required> <br>\r\n\r\n      <label>Minimum Renting Days</label><br>\r\n      <input type=\"number\" [(ngModel)]=\"place.minimumRentingDates\" name=\"minRentingDates\" min=\"1\" step=\"1\" required> <br>\r\n\r\n      <div class=\"checkList\">\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.livingRoom\" name=\"livingRoom\" > <label>Living Room</label><br>\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.wiFi\" name=\"wiFi\"><label>Wi Fi</label><br>\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.airConditioning\" name=\"airConditioning\"><label>Air Conditioning</label><br>\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.heating\" name=\"heating\"><label>Heating</label><br>\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.parking\" name=\"parking\"><label>Parking</label><br>\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.elevator\" name=\"elevator\"><label>Elevator</label><br>\r\n        <input type=\"checkbox\" class=\"checkBox\" [(ngModel)]=\"place.petsAllowed\" name=\"petsAllowed\"><label>Pets Allowed</label><br>\r\n        <input type=\"checkbox\" class=\"checkBox\"  [(ngModel)]=\"place.partiesAllowed\" name=\"partiesAllowed\"><label>Parties Allowed</label><br>\r\n        <input type=\"checkbox\" class=\"checkBox\"  [(ngModel)]=\"place.smokingAllowed\" name=\"smokingAllowed\"><label>Smoking Allowed</label><br>\r\n      </div>\r\n      <button (click)=\"updatePlace()\">Update Place Details</button>\r\n\r\n      <p *ngIf=\"attemptedUpdate && successfulUpdate\">Successful Update</p>\r\n\r\n    </form>\r\n  </div>\r\n\r\n\r\n  <div class=\"frame\">\r\n    <h3>New Availability</h3>\r\n    <form ngNativeValidate>\r\n      <label>Starting Date</label><br>\r\n      <input type=\"date\" [(ngModel)]='availability.startingDate' name=\"startingDate\" required><br>\r\n\r\n      <label>Ending Date</label><br>\r\n      <input type=\"date\" [(ngModel)]='availability.endingDate' name=\"endingDate\" required><br>\r\n\r\n      <br>\r\n      <button (click)=\"uploadAvailability()\">Upload Availability</button>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"frame\">\r\n    <h3>Existing Availabilities</h3>\r\n    <div *ngFor=\"let availability of availabilities \">\r\n      <p>Starting Date: {{availability.startingDate}} | Ending Date: {{availability.endingDate}}</p>\r\n      <button (click)=\"deleteAvailability(availability.availabilityId)\">Delete Availability</button>\r\n      <hr>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"frame\">\r\n    <h3>Reservations</h3>\r\n    <div *ngFor=\"let reservation of reservations \">\r\n      <p>Starting Date: {{reservation.startingDate}} | Ending Date: {{reservation.endingDate}}</p><br>\r\n      <p>Number of People: {{reservation.numberOfPeople}}</p><br>\r\n      <button routerLink=\"/users/{{reservation.userId}}\">See Tenant's Profile</button>\r\n      <hr>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {PlaceService} from '../../service/place.service';\nimport {Place} from '../../../model/Place';\nimport {UserService} from '../../service/user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-places',\n  templateUrl: './places.component.html',\n  styleUrls: ['./places.component.css']\n})\nexport class PlacesComponent implements OnInit {\n\n  places: Place[];\n  constructor(private placeService: PlaceService, private userService: UserService , private router: Router) { }\n\n  ngOnInit(): void {\n    this.userService.findUserId(localStorage.getItem('username')).subscribe(id => {\n      this.placeService.getPlacesBy(id).subscribe(places => this.places = places); } );\n  }\n\n}\n","<h2>Places</h2>\r\n\r\n<h3 *ngIf=\"places.length == 0\">You Haven't Uploaded Any Places Yet</h3>\r\n\r\n<table *ngIf=\"places.length!= 0\" class=\"mainTable\">\r\n  <tr class=\"tableHeadingRow\">\r\n    <td class=\"tableHeadingData\"><label>Place</label></td>\r\n    <td class=\"tableHeadingData\"><label>Action</label></td>\r\n  </tr>\r\n  <tr *ngFor=\"let place of places\" >\r\n    <td>{{place.type}} In {{place.address}} (ID: {{place.placeId}})</td>\r\n    <td class=\"tableActions\">\r\n      <button routerLink=\"/editPlaces/{{place.placeId}}\">Edit Place</button>\r\n      <button routerLink=\"/places/{{place.placeId}}\">View Place</button>\r\n    </td>\r\n  </tr>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MessageService} from '../service/message.service';\nimport {UserService} from '../service/user.service';\nimport {Observable} from 'rxjs';\nimport {Message} from '../../model/Message';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private messageService: MessageService,\n              private userService: UserService) {}\n\n  ContactedUsers: string[];\n  tempUser: string;\n  MessageRoomLoaded = false;\n  Messages: Message[];\n  private senderUsername: string;\n  private UsedId: number;\n  chatMessage: Message;\n\n  ngOnInit(): void {\n    // On initialization, all the other users, the current logged in users has contacted are gathered.\n    // In order for the user to see his past conversations and select a user\n    this.userService.getUserId(localStorage.getItem('username')).then(\n      res => {\n        this.UsedId = res;\n        this.messageService.getContactedUsers(res).subscribe(users => this.ContactedUsers = users);\n      }\n    );\n    this.MessageRoomLoaded = false;\n    this.chatMessage = { messageId: null, senderId: null, receiverId: null, text: null, date: null};\n  }\n\n  ShowNewMessage() {\n    this.router.navigate(['NewMessage'], {relativeTo: this.route});\n  }\n\n  loadMessageRoom(user: string): void {\n    // If the user selects a chat with another user, all the messages between them are gathered and shown\n    this.userService.getUserId(user).then(\n      result => {\n        this.messageService.getMessagesBetween(this.UsedId , result).subscribe(\n          res => {\n            this.Messages = res;\n          }\n        );\n        this.userService.getUser(result.toString()).subscribe(\n          res => {\n            this.senderUsername = res.userName;\n          }\n        );\n      }\n    );\n    this.MessageRoomLoaded = true;\n  }\n\n  senderName(senderId: number): string{\n    // Given a user ID\n    if (senderId === this.UsedId){\n        // If the logged in user, a 'You' is returned to be show as the sender in the message bubble\n        return 'You ';\n    } else {\n      // Otherwise the username of the sender in returned with the first character of his name capitalized\n      return this.senderUsername.charAt(0).toUpperCase() + this.senderUsername.substring(1); // Capitalizing first latter\n    }\n  }\n\n  deleteMessage(messageId: number): void{\n    this.messageService.deleteMessage(messageId);\n    this.loadMessageRoom(this.senderUsername);\n  }\n\n  // Compiling message and sending it to the other user of the chat room\n  async sendMessage() {\n\n    this.chatMessage.senderId = await this.userService.getUserId(localStorage.getItem('username'));\n    this.chatMessage.receiverId = await this.userService.getUserId(this.senderUsername);\n    this.chatMessage.date = new Date();\n\n    await this.messageService.SendMessage(this.chatMessage).toPromise();\n\n    this.chatMessage = { messageId: null, senderId: null, receiverId: null, text: null, date: null};\n\n    this.loadMessageRoom(this.tempUser);\n  }\n}\n","\n<div *ngIf=\"MessageRoomLoaded === false\" class=\"messageUsers\">\n  <button (click)=\"ShowNewMessage()\" id=\"newMessageButton\">New Message</button>\n  <h2>Users In Contact</h2>\n  <table>\n    <tr *ngFor=\"let user of ContactedUsers\" class=\"clickable\" (click)=\"loadMessageRoom(tempUser=user)\">\n       <td>{{user}}</td>\n    </tr>\n  </table>\n</div>\n\n<div *ngIf=\"MessageRoomLoaded === true\" class=\"chat\">\n  <button (click)=\"MessageRoomLoaded = false\">Back to all messages</button>\n  <button (click)=\"loadMessageRoom(tempUser)\">Refresh</button>\n  <ul>\n    <li *ngFor=\"let message of Messages\" class=\"message\">\n      <div [className]=\"'message_date'\">  <label> At: {{message.date}} </label> </div>\n      <label [className]=\"'message_username'\"> {{senderName(message.senderId)}} wrote: </label>\n      <div [className]=\"'message_text'\"> <label> {{message.text}} </label> </div>\n      <button (click)=\"deleteMessage(message.messageId)\">Delete Message</button><br>\n    </li>\n  </ul>\n\n  <div class=\"newMessage\">\n    <label>New message: </label>\n    <input type=\"text\" [(ngModel)]=\"this.chatMessage.text\" required>\n    <button [disabled]=\"this.chatMessage.text === null\" (click)=\"sendMessage()\">Send it!</button>\n  </div>\n\n</div>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {Message} from '../../../model/Message';\nimport {UserService} from '../../service/user.service';\nimport {MessageService} from '../../service/message.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-new-message',\n  templateUrl: './new-message.component.html',\n  styleUrls: ['./new-message.component.css']\n})\nexport class NewMessageComponent implements OnInit {\n\n  message: Message;\n  ReceiverUsername: string;\n  invalidReceiverId: boolean;\n\n  constructor(private userService: UserService, private messageService: MessageService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.message = { messageId: null, senderId: null, receiverId: null, text: null, date: null};\n    this.invalidReceiverId = false;\n  }\n\n  // This function gets the information the user has given, compiles a message accordingly and sends it\n  async sendMessage() {\n\n    this.message.receiverId = await this.userService.getUserId(this.ReceiverUsername);\n    if (this.message.receiverId === -1){\n      this.invalidReceiverId = true;\n      return;\n    }\n    this.invalidReceiverId = false;\n\n    this.message.senderId = await this.userService.getUserId(localStorage.getItem('username'));\n    this.message.date = new Date();\n\n    console.log(await this.messageService.SendMessage(this.message).toPromise());\n\n    await this.router.navigateByUrl('/messages');\n\n  }\n\n  CloseComponent(): void{\n    this.router.navigateByUrl('/messages');\n  }\n}\n","<div class=\"newMessage\">\n  <br><h3>New Message</h3>\n\n  <label> To who are you sending this message? </label><br>\n  <input type=\"text\" [(ngModel)]=\"this.ReceiverUsername\" name=\"ReceiverUsername\" placeholder=\"Type their username\" required>\n  <div *ngIf=\"invalidReceiverId\" [className]=\"'warning'\"><label> There is no such user!</label></div>\n\n  <br><label>Your message</label><br>\n  <textarea id=\"messageBox\" [(ngModel)]=\"message.text\" name=\"MessageText\" required><br></textarea>\n  <br>\n  <button id=\"CloseButton\" (click)=\"CloseComponent()\" >Cancel</button> <button id=\"SendButton\" (click)=\"sendMessage()\" >Send it!</button>\n</div>\n","import {Component, forwardRef, Host, Inject, OnInit} from '@angular/core';\r\nimport {UserService} from '../service/user.service';\r\nimport {User} from '../../model/User';\r\nimport {PendingHost} from '../../model/PendingHost';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AppComponent} from '../app.component';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute,\r\n              @Inject(forwardRef(() => AppComponent)) private parent: AppComponent) {}\r\n\r\n  user: User;                      // object of type User to be sent when registering new User\r\n  registerStatus = 0;              // Becomes 1 for existing username , 2 for successful registration , 3 for no server response\r\n  passwordVerification = '';       // variable  used for password verification\r\n  attemptedRegistration = false;   // When 'register' button is clicked it becomes true\r\n  pendingHost: PendingHost;        // object of type Pending Host to be sent when the new user asks to be a host\r\n  private LoggedIn = false;\r\n\r\n  // Used for the image uploading/validating\r\n  imageFile: File;\r\n  private ImageFileType: string;\r\n  InvalidFileType = false;\r\n  ImageTooLarge = false;\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.user = {userName: '', password: '', telephone: '', firstName: '', ProfilePhoto: null, email: '', lastName: '',\r\n      isHost: false, isTenant: false, isAdmin: false , userId: null}; // Initializing new user\r\n\r\n    this.pendingHost = { userId: 0}; // Initializing pending host\r\n\r\n    this.LoggedIn = false;\r\n    this.attemptedRegistration = false;\r\n    this.InvalidFileType = false;\r\n    this.ImageTooLarge = false;\r\n  }\r\n\r\n\r\n  register(): void{\r\n    this.attemptedRegistration = true;\r\n\r\n    // If user has entered valid inputs then process to the register request\r\n    if (!this.emptyFields() && this.passwordMatch() && !this.smallPassword()) {\r\n      this.userService.register(this.user, this.user.isHost).\r\n      subscribe(response => {\r\n          if (response == null) {\r\n            this.registerStatus = 1; // Unsuccessful registration because of existing username\r\n          }\r\n          else {\r\n            this.registerStatus = 2; // Successful registration\r\n            this.user.userId = response.userId; // Capturing new user's username\r\n          }\r\n        },\r\n        error => {this.registerStatus = 3; } // General server error\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  // Checks if registration is successful and if it is, it does does some actions like login/redirecting\r\n  successfulRegistration(): boolean{\r\n    if (this.registerStatus === 2  && this.passwordMatch() && !this.emptyFields() && this.attemptedRegistration === true) {\r\n      if (this.LoggedIn === false) {\r\n        // logs in automatically\r\n        localStorage.clear();\r\n        this.userService.LoginRequest(this.user.userName, this.user.password).subscribe(\r\n          response => {\r\n            localStorage.setItem('token', response.headers.get('Authorization'));\r\n            localStorage.setItem('username', this.user.userName);\r\n            // if user has asked to become a host,then a new Pending Host is posted\r\n            if (this.user.isHost){\r\n              this.userService.uploadPendingHost(this.user.userId);\r\n            }\r\n            // calls function GetUser in app.component class to update the menu panels with the new user's roles\r\n            this.parent.GetUser();\r\n            // if new user has uploaded a profile photo\r\n            if (this.imageFile != null){// If the user has selected to upload an image\r\n              // A request to upload the image to the server is made\r\n              this.userService.UploadImage(this.user.userName, this.imageFile).subscribe(\r\n                res => this.router.navigateByUrl('/searchForm') // After that the registration has ended, redirection to the home page\r\n              );\r\n            }\r\n            if (this.imageFile == null){// If no image was selected, the user is immediately redirected to the home page\r\n              this.router.navigateByUrl('/searchForm') ;\r\n            }\r\n          }\r\n        );\r\n        this.LoggedIn = true;\r\n      }\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // checks registerStatus boolean to examine if the Username entered already exists\r\n  usernameExists(): boolean{\r\n    if (this.registerStatus === 1 && this.attemptedRegistration){\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  passwordMatch(): boolean {\r\n    if (this.user.password == this.passwordVerification) { return true; }\r\n    else { return false; }\r\n  }\r\n\r\n  smallPassword(): boolean {\r\n    return this.attemptedRegistration && this.user.password.length < 4;\r\n  }\r\n\r\n  emptyFields(): boolean{\r\n    if (this.user.userName == '' || this.user.password == '' || this.user.telephone == '' || this.user.firstName == '' ||\r\n        this.user.email == '' || this.user.lastName == ''){\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // This function takes a file, extracts its type, and returns null if the type is not acceptable as a profile photo\r\n  private CheckImageType(file: File): string{\r\n    let FileType = '';\r\n    let Index: number = file.name.length;\r\n\r\n    while (file.name.charAt(Index) !== '.' || Index < 0 ){// Iterating the filename from the end to the first '.',\r\n                                                          // where the file type is located\r\n      FileType = file.name.charAt(Index) + FileType;\r\n      Index--;\r\n    }\r\n    FileType = file.name.charAt(Index) + FileType; // Adding a '.' to the filename\r\n\r\n    switch (FileType) {// Checking if the file type is acceptable\r\n      case '.png':\r\n        return '.png';\r\n      case '.jpg':\r\n        return '.jpg';\r\n      case '.jpeg':\r\n        return '.jpeg';\r\n      case '.gif':\r\n        return '.gif';\r\n      default:\r\n        return null; // If it is not, null is returned\r\n    }\r\n  }\r\n\r\n  uploadPhoto(event): void{\r\n    this.ImageFileType = this.CheckImageType(event.target.files[0]);\r\n\r\n    if (event.target.files[0].size > 10000000){// Maximum size of a profile photo is 10mb (Backend also programed to reject photos > 10mb)\r\n      this.imageFile = null;\r\n      this.ImageTooLarge = true;\r\n      return;\r\n    }else { this.ImageTooLarge = false; }\r\n\r\n    if ( this.ImageFileType !== null){\r\n      this.imageFile = event.target.files[0]; // If the file type can be accepted, the image is saved until it's uploaded to the server\r\n      this.InvalidFileType = false;\r\n    }else{\r\n      this.imageFile = null;\r\n      this.InvalidFileType = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<h2>Registration Page</h2>\r\n\r\n<div id=\"registrationForm\">\r\n  <form ngNativeValidate>\r\n\r\n    <div class=\"registrationSection\">\r\n      <h3>Let's get to know you</h3>\r\n\r\n      <label>First Name </label><br>\r\n      <input type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstname\" required> <br>\r\n\r\n      <label>Last Name </label><br>\r\n      <input type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastname\" required> <br>\r\n\r\n      <label>Username </label><br>\r\n      <input type=\"text\" [(ngModel)]=\"user.userName\" name=\"username\" required><br>\r\n\r\n      <label>Email </label><br>\r\n      <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" required><br>\r\n\r\n      <label>Phone Number </label><br>\r\n      <input type=\"tel\" [(ngModel)]=\"user.telephone\" name=\"telephone\" required> <br>\r\n\r\n\r\n      <input type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\" #imageSelector style=\"display: none\" (change)=\"uploadPhoto($event)\">\r\n      <button type=\"button\" (click)=\"imageSelector.click()\">Upload Photo</button>\r\n      <div *ngIf=\"InvalidFileType\" [className]=\"'warning'\"><p> Please choose an image file such as .png .jpg .jpeg .gif</p></div>\r\n      <div *ngIf=\"ImageTooLarge\" [className]=\"'warning'\"><p> The file you selected is too large (maximum file size is 10mb)</p></div>\r\n    </div>\r\n\r\n    <div class=\"registrationSection\">\r\n      <h3>Chose your secret password</h3>\r\n\r\n      <label>Password </label><br>\r\n      <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" required> <br>\r\n\r\n      <label>Retype Password </label><br>\r\n      <input type=\"password\" [(ngModel)]=\"passwordVerification\" name=\"password2\" required> <br>\r\n\r\n      <div *ngIf=\"smallPassword()\" [className]=\"'warning'\"><p> Password length must be at least 4 characters </p></div>\r\n\r\n      <div *ngIf=\"attemptedRegistration\" [className]=\"'warning'\"><div *ngIf=\"!passwordMatch()\">Passwords Don't Match!</div></div>\r\n    </div>\r\n\r\n    <div class=\"registrationSection\">\r\n      <h3> Chose your role (can be both😉)</h3>\r\n      <label>Tenant</label><input type=\"checkbox\" [(ngModel)]=\"user.isTenant\" name=\"tenant\">\r\n      <label> Host</label><input type=\"checkbox\" [(ngModel)]=\"user.isHost\" name=\"host\">\r\n\r\n      <div *ngIf=\"user.isHost\"><p>Approval from our admins is needed in order to become a Host</p></div>\r\n    </div>\r\n\r\n    <br><div *ngIf=\"usernameExists()\" [className]=\"'warning'\">Username Exists!</div>\r\n    <div *ngIf=\"successfulRegistration()\">\r\n      <b>Successful Registration!!, You will be redirected and logged in automagically!</b>\r\n    </div>\r\n\r\n    <button (click)=\"register()\" >Register!</button>\r\n  </form>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-search-form',\r\n  templateUrl: './search-form.component.html',\r\n  styleUrls: ['./search-form.component.css']\r\n})\r\nexport class SearchFormComponent implements OnInit {\r\n\r\n  checkIn: Date;\r\n  checkOut: Date;\r\n  country: string;\r\n  district: string;\r\n  city: string;\r\n  persons: number;\r\n  InvalidDate: boolean;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.InvalidDate = false;\r\n    this.country = null;\r\n    this.district = null;\r\n    this.city = null;\r\n    this.persons = null;\r\n  }\r\n\r\n  ShowApartments(): void {\r\n\r\n    // if not valid dates/number of people are entered , then returns without proceeding to the available places\r\n    if (this.checkIn === undefined || this.checkOut === undefined || this.persons === null\r\n        || !Number.isInteger(this.persons) || this.persons <= 0)  { return; }\r\n\r\n    if (this.checkIn > this.checkOut){\r\n      this.InvalidDate = true;\r\n      return;\r\n    }\r\n\r\n    // If the user did not specify these fields they are passed as null strings\r\n    if (this.country === null) { this.country = 'null'; }\r\n    if (this.district === null) { this.district = 'null'; }\r\n    if (this.city === null) { this.city = 'null'; }\r\n\r\n    // saves dates to the local storage so that user won't be asked to enter the dates/number of people again while reserving a place\r\n    localStorage.setItem('startingDate', this.checkIn.toString());\r\n    localStorage.setItem('endingDate', this.checkOut.toString());\r\n    localStorage.setItem('numOfPersons', this.persons.toString());\r\n\r\n    // proceed to show places available in these dates\r\n    this.router.navigateByUrl('/places/' + this.checkIn + '/' + this.checkOut + '/' + this.country + '/' + this.city + '/' + this.district + '/' + this.persons.toString() );\r\n  }\r\n}\r\n","\r\n\r\n<div id=\"background\">\r\n  <br><h2>Search Form</h2>\r\n<div id=\"searchForm\">\r\n  <form ngNativeValidate>\r\n    <br><h3>Which Is Your Next Location?</h3>\r\n\r\n    <label> Country </label><br class=\"mobileOnly\">\r\n    <input [(ngModel)]=\"country\" type=\"text\" name=\"country\"><br class=\"mobileOnly\">\r\n\r\n    <label> City </label><br class=\"mobileOnly\">\r\n    <input [(ngModel)]=\"city\" type=\"text\" name=\"city\"><br class=\"mobileOnly\">\r\n\r\n    <label> District </label><br class=\"mobileOnly\">\r\n    <input [(ngModel)]=\"district\" type=\"text\" name=\"district\"> <br>\r\n\r\n\r\n    <h3>How Many People?</h3><br>\r\n    <input [(ngModel)]=\"persons\" type=\"number\" name=\"persons\" min=\"0\" step=\"1\" required> <br>\r\n\r\n\r\n\r\n    <h3>When Is Your Next Reservation?</h3>\r\n    <label> Check In </label>\r\n    <input type=\"date\" [(ngModel)]='checkIn' name=\"checkIn\" required><br class=\"mobileOnly\">\r\n    <label> Check Out </label>\r\n    <input type=\"date\" [(ngModel)]='checkOut' name=\"checkOut\" required><br>\r\n    <div *ngIf=\"InvalidDate\"> <label class=\"warning\"> Check-In date must be before the Check-Out date </label> <br> </div>\r\n\r\n    <button (click)=\"ShowApartments()\">Show me available places!</button>\r\n\r\n  </form>\r\n</div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {UserService} from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdministratorGuardService implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('admin') === 'true'){\n      return true;\n    }\n\n    else{\n      this.router.navigate(['/searchForm']);\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HostGuardService implements CanActivate{\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('host') === 'true'){\n      return true;\n    }\n\n    else{\n      this.router.navigate(['/searchForm']);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {User} from '../../model/User';\nimport {Observable} from 'rxjs';\nimport {Message} from '../../model/Message';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  private BaseUrl = 'https://placie-springboot.herokuapp.com/';\n  private SendMessageUrl =  this.BaseUrl + 'Messages';\n  private MessagesUrl =  this.BaseUrl;\n  private authorizationHeader: { headers: { Authorization: string } } ;\n\n  constructor(private http: HttpClient) {\n    this.authorizationHeader = { headers: {Authorization: localStorage.getItem('token') }  };\n  }\n\n  getMessages(): Observable<Message[]>{\n    return this.http.get<Message[]>(this.SendMessageUrl, this.authorizationHeader);\n  }\n\n  getMessagesXml(): Observable<string>{\n    const httpHeader: HttpHeaders = new HttpHeaders({\n      Accept: 'application/xml',\n      Authorization: localStorage.getItem('token')\n    });\n    return this.http.get(this.SendMessageUrl, { headers: httpHeader , responseType: 'text'});\n  }\n\n  SendMessage(message: Message): Observable<Message> {\n    return this.http.post<Message>(this.SendMessageUrl, message, this.authorizationHeader);\n  }\n\n  deleteMessage(messageId: number): void{\n    this.http.delete<Message>(this.SendMessageUrl + '/' + messageId, this.authorizationHeader).subscribe();\n  }\n\n  getContactedUsers(userID: number): Observable<string[]>{\n    return this.http.get<string[]>(this.MessagesUrl + '/ContactedUsers/' + userID, this.authorizationHeader);\n  }\n\n  getMessagesBetween(userID1: number, userID2: number): Observable<Message[]>{\n    return this.http.get<Message[]>(this.MessagesUrl + '/MessagesBetween/' + userID1 + '/' + userID2, this.authorizationHeader);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Place} from '../../model/Place';\nimport {Availability} from '../../model/Availability';\nimport {Reservation} from '../../model/Reservation';\nimport {Review} from '../../model/Review';\nimport {PlacePhoto} from '../../model/PlacePhoto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n\n  private BaseUrl = 'https://placie-springboot.herokuapp.com/';\n  private placesUrl = this.BaseUrl + 'Places';\n  private searchUrl = this.BaseUrl + 'PlacesSearch';\n  private availabilityUrl = this.BaseUrl + 'Availabilities' ;\n  private reservationUrl = this.BaseUrl + 'Reservations';\n\n  constructor(private http: HttpClient) { }\n\n\n  authorizationHeader(): { headers: { Authorization: string } }{\n    return { headers: {Authorization: localStorage.getItem('token') }  };\n  }\n\n  post(place: Place): Observable<Place> {\n    return this.http.post<Place>(this.placesUrl, place, this.authorizationHeader());\n  }\n\n  updatePlace(place: Place, placeId: string): Observable<Place>{\n    return this.http.put<Place>(this.placesUrl + '/' + placeId, place, this.authorizationHeader());\n  }\n\n  getPlaces(): Observable<Place[]>{\n    return this.http.get<Place[]>(this.placesUrl);\n  }\n\n  getPlacesXml(): Observable<string>{\n    const httpHeader: HttpHeaders = new HttpHeaders({\n      Accept: 'application/xml',\n      Authorization: localStorage.getItem('token')\n    });\n    return this.http.get(this.placesUrl, { headers: httpHeader , responseType: 'text'});\n  }\n\n  searchPlaces(checkIn: string, checkOut: string, country: string, city: string, district: string, persons: string): Observable<Place[]>{\n    return this.http.get<Place[]>(this.searchUrl\n      + '/' + checkIn  + '/' + checkOut  + '/' + country  + '/' + city  + '/' + district + '/' + persons);\n  }\n\n  getPlace(placeId: string): Observable<Place>{\n    return this.http.get<Place>(this.placesUrl + '/' + placeId);\n  }\n\n  getPlacesBy(hostId: number): Observable<Place[]>{\n    return this.http.get<Place[]>(this.BaseUrl + 'PlacesBy/' + hostId.toString(), this.authorizationHeader());\n  }\n\n  getAvailabilities(): Observable<Availability[]>\n  {\n    return this.http.get<Availability[]>(this.availabilityUrl , this.authorizationHeader()) ;\n  }\n\n  getAvailabilitiesXml(): Observable<string>{\n    const httpHeader: HttpHeaders = new HttpHeaders({\n      Accept: 'application/xml',\n      Authorization: localStorage.getItem('token')\n    });\n    return this.http.get(this.availabilityUrl, { headers: httpHeader , responseType: 'text'});\n  }\n\n  getAvailabilitiesFor(placeId: string): Observable<Availability[]>\n  {\n    return this.http.get<Availability[]>(this.availabilityUrl + 'For/' + placeId , this.authorizationHeader()) ;\n  }\n\n  uploadAvailability(availability: Availability): Observable<Availability>{\n    return this.http.post<Availability>(this.availabilityUrl, availability, this.authorizationHeader());\n  }\n\n  deleteAvailability(availabilityId: string): Observable<Availability>{\n    return this.http.delete<Availability>(this.availabilityUrl + '/' + availabilityId, this.authorizationHeader());\n  }\n  UploadMainImage(PlaceId: number, Image: File): Observable<any>{\n    const formdata  = new FormData();\n    formdata.append('file', Image, Image.name);\n\n    return this.http.post<any>(this.placesUrl + '/MainImage/' + PlaceId, formdata, this.authorizationHeader());\n  }\n\n  GetImageUrl(placeiId: string): string{\n    return this.placesUrl + '/MainImage/' + placeiId;\n  }\n\n  UploadImage(PlaceId: number, imageFile: File): Observable<any> {\n    const formdata  = new FormData();\n    formdata.append('file', imageFile, imageFile.name);\n\n    return this.http.post<any>(this.placesUrl + '/Images/' + PlaceId, formdata, this.authorizationHeader());\n\n  }\n\n  GetPlacesPhotosIds(placeId: number): Observable<number[]>{\n    if (localStorage.getItem('token') == null) {return this.http.get<number[]>(this.placesUrl + '/PhotoRange/' + placeId); }\n    return this.http.get<number[]>(this.placesUrl + '/PhotoRange/' + placeId, this.authorizationHeader());\n  }\n\n  GetPlacePhotoUrl(photoId: number): string{\n    return this.placesUrl + '/Images/' + photoId;\n  }\n\n  getReservations(): Observable<Reservation[]>{\n    return this.http.get<Reservation[]>(this.reservationUrl, this.authorizationHeader());\n  }\n\n  getReservationsXml(): Observable<string>{\n    const httpHeader: HttpHeaders = new HttpHeaders({\n      Accept: 'application/xml',\n      Authorization: localStorage.getItem('token')\n    });\n    return this.http.get(this.reservationUrl, { headers: httpHeader , responseType: 'text'});\n  }\n\n  makeReservation(reservation: Reservation): Observable<Boolean>{\n    console.log(reservation);\n    return this.http.post<Boolean>(this.reservationUrl, reservation , this.authorizationHeader());\n  }\n\n  myReservations(): Observable<Reservation[]>{\n    return this.http.get<Reservation[]>(this.BaseUrl + 'MyReservations', this.authorizationHeader());\n  }\n\n  ReservationsFor(placeId: string): Observable<Reservation[]>{\n    return this.http.get<Reservation[]>(this.BaseUrl + 'ReservationsFor/' + placeId, this.authorizationHeader());\n  }\n\n  getReviews(): Observable<Review[]>{\n    return this.http.get<Review[]>(this.BaseUrl + 'Reviews', this.authorizationHeader());\n  }\n\n  getReviewsXml(): Observable<string>{\n    const httpHeader: HttpHeaders = new HttpHeaders({\n      Accept: 'application/xml',\n      Authorization: localStorage.getItem('token')\n    });\n    return this.http.get(this.BaseUrl + 'Reviews', { headers: httpHeader , responseType: 'text'});\n  }\n\n  postReview(newReview: Review): Observable<Review>{\n    return this.http.post<Review>(this.BaseUrl + 'Reviews', newReview, this.authorizationHeader());\n  }\n  getReviewsForPlace(placeId: string): Observable<Review[]>{\n    return this.http.get<Review[]>(this.BaseUrl + 'ReviewsFor/' + placeId.toString());\n  }\n\n  getReviewsForReservation(reservationId: number): Observable<Review[]>{\n    return this.http.get<Review[]>(this.BaseUrl + 'ReviewsForReservation/' + reservationId.toString());\n  }\n\n  getPlacePhotos(): Observable<PlacePhoto[]> {\n    return this.http.get<PlacePhoto[]>(this.BaseUrl + 'PlacePhotos', this.authorizationHeader());\n  }\n\n  getPlacePhotosXml(): Observable<string>{\n    const httpHeader: HttpHeaders = new HttpHeaders({\n      Accept: 'application/xml',\n      Authorization: localStorage.getItem('token')\n    });\n    return this.http.get(this.BaseUrl + 'PlacePhotos', { headers: httpHeader , responseType: 'text'});\n  }\n\n  getAverageStars(placeId: number): Observable<number>{\n    return this.http.get<number>(this.BaseUrl + 'AverageStars/' + placeId);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TenantGuardService implements CanActivate {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('tenant') === 'true'){\r\n      return true;\r\n    }\r\n\r\n    else{\r\n      this.router.navigate(['/searchForm']);\r\n    }\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {UserService} from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuardService implements CanActivate {\n\n  constructor( private userService: UserService, private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('token')){\n      return true;\n    }\n\n    else{\n      this.router.navigate(['/searchForm']);\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport {User , LoginUser} from '../../model/User';\r\nimport {PendingHost} from '../../model/PendingHost';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n\r\n  private BaseUrl = 'https://placie-springboot.herokuapp.com/';\r\n  private registrationUrl = this.BaseUrl + 'Registration';\r\n  private usersUrl = this.BaseUrl + 'Users';\r\n  private pendingHostsUrl = this.BaseUrl + 'PendingHosts';\r\n  private LoginUrl = this.BaseUrl + 'login';\r\n  private RootUrl = this.BaseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  authorizationHeader(): { headers: { Authorization: string } }{\r\n    return { headers: {Authorization: localStorage.getItem('token') }  };\r\n  }\r\n\r\n  register(user: User, host: boolean): Observable<User> {\r\n    return this.http.post<User>(this.registrationUrl, user);\r\n  }\r\n\r\n  getUsers(): Observable<User[]>{\r\n    return this.http.get<User[]>(this.usersUrl, this.authorizationHeader());\r\n  }\r\n\r\n  getUsersxml(): Observable<string>{\r\n    const httpHeader: HttpHeaders = new HttpHeaders({\r\n      Accept: 'application/xml',\r\n      Authorization: localStorage.getItem('token')\r\n    });\r\n    return this.http.get(this.usersUrl, { headers: httpHeader , responseType: 'text'});\r\n  }\r\n\r\n  getUser(id: string): Observable<User>{\r\n    // console.log('Here');\r\n    // console.log(this.authorizationHeader);\r\n    if(localStorage.getItem('token') == null){return this.http.get<User>(this.usersUrl + '/' + id) ; }\r\n    return this.http.get<User>(this.usersUrl + '/' + id, this.authorizationHeader());\r\n  }\r\n\r\n  async getUserId( username: string): Promise<number>{\r\n    const response = await this.http.get<number>(this.RootUrl + '/UserId/' + username, this.authorizationHeader()).toPromise();\r\n    return response;\r\n  }\r\n\r\n  findUserId( username: string): Observable<number>{\r\n    return this.http.get<number>(this.RootUrl + '/UserId/' + username, this.authorizationHeader());\r\n  }\r\n\r\n  updateUser(user: User, id: number): void{\r\n    this.http.put<any>(this.usersUrl + '/' + id, user, this.authorizationHeader()).subscribe();\r\n  }\r\n\r\n  updateUserPassword(user: User, id: number): void{\r\n    this.http.put<any>(this.usersUrl + 'NewPassword/' + id, user, this.authorizationHeader()).subscribe();\r\n  }\r\n\r\n  getPendingHost(id: string): Observable<PendingHost>{\r\n    return this.http.get<PendingHost>(this.pendingHostsUrl + '/' + id, this.authorizationHeader());\r\n  }\r\n\r\n  getPendingHosts(): Observable<PendingHost[]>{\r\n    return this.http.get<PendingHost[]>(this.pendingHostsUrl , this.authorizationHeader());\r\n  }\r\n\r\n  getPendingHostsXml(): Observable<string>{\r\n    const httpHeader: HttpHeaders = new HttpHeaders({\r\n      Accept: 'application/xml',\r\n      Authorization: localStorage.getItem('token')\r\n    });\r\n    return this.http.get(this.pendingHostsUrl, { headers: httpHeader , responseType: 'text'});\r\n  }\r\n\r\n  uploadPendingHost(pendingHost: number): void{\r\n    this.http.post<any>(this.pendingHostsUrl, pendingHost, this.authorizationHeader()).subscribe();\r\n  }\r\n\r\n  deletePendingHost(pendingHost: number): void{\r\n    this.http.delete(this.pendingHostsUrl + '/' + pendingHost, this.authorizationHeader()).subscribe();\r\n  }\r\n\r\n  LoginRequest(userName: string, password: string): Observable<HttpResponse<string>>{\r\n    const json: LoginUser = { userName, password };\r\n    return this.http.post<string>(this.LoginUrl, json, { observe: 'response'});\r\n  }\r\n\r\n  Logout(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n  }\r\n\r\n  LoggedIn(): boolean{\r\n    return localStorage.getItem('token') != null;\r\n  }\r\n\r\n  UploadImage(username: string, Image: File): Observable<any>{\r\n    const formdata  = new FormData();\r\n    formdata.append('file', Image, Image.name);\r\n\r\n    return this.http.post<any>(this.RootUrl + '/Users/Image/' + username, formdata, this.authorizationHeader());\r\n  }\r\n\r\n  GetImageUrl(username: string): string{\r\n    return this.RootUrl + '/Users/Image/' + username;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {PlaceService} from '../service/place.service';\r\nimport {Reservation} from '../../model/Reservation';\r\nimport {Review} from '../../model/Review';\r\n\r\n@Component({\r\n  selector: 'app-tenant',\r\n  templateUrl: './tenant.component.html',\r\n  styleUrls: ['./tenant.component.css']\r\n})\r\nexport class TenantComponent implements OnInit {\r\n\r\n  reservations: Reservation[];\r\n  review: Review;\r\n  reviewFor = -1;\r\n\r\n  constructor(private placeService: PlaceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.review = { reviewId: null , reviewStars : null , reviewText: null, reservationId: null};\r\n    this.placeService.myReservations().subscribe(reservations => this.reservations = reservations);\r\n  }\r\n\r\n  initializeReview(): void{\r\n    this.review = { reviewId: null , reviewStars : null , reviewText: null, reservationId: null};\r\n  }\r\n\r\n  submitReview(): void{\r\n    if (this.review.reviewStars < 0 || this.review.reviewStars > 5 || this.review.reviewStars == null) {\r\n      return;\r\n    }\r\n    this.review.reservationId = this.reviewFor;\r\n    this.placeService.postReview(this.review).subscribe(review => {\r\n      if (review == null) {window.alert('You already made a review for this reservation!'); }\r\n    });\r\n    this.reviewFor = -1;\r\n  }\r\n\r\n  showReview(id: number): void{\r\n    this.initializeReview();\r\n    this.reviewFor = id;\r\n  }\r\n\r\n}\r\n","<h2>My Reservations</h2>\r\n\r\n<h3 *ngIf=\"reservations.length == 0\">No Reservations Yet</h3>\r\n\r\n<table *ngIf=\"reservations.length!= 0\" class=\"mainTable\">\r\n  <tr class=\"tableHeadingRow\">\r\n    <td class=\"tableHeadingData\"><label>Reservation</label></td>\r\n    <td class=\"tableHeadingData\"><label>Action</label></td>\r\n  </tr>\r\n  <tr *ngFor=\"let reservation of reservations\" >\r\n    <td>Dates: <span class=\"field\">{{reservation.startingDate}}</span> - <span class=\"field\">{{reservation.endingDate}}</span> <br>People: <span class=\"field\">{{reservation.numberOfPeople}} </span> </td>\r\n    <td class=\"tableActions\">\r\n      <button routerLink=\"/places/{{reservation.placeId}}\">View Reserved Place</button>\r\n      <button (click)=\"showReview(reservation.reservationId)\">Review Reserved Place</button>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n<div *ngIf=\"reviewFor!=-1\" id=\"reviewBox\">\r\n  <h2>Write A Review For Reservation with ID: {{reviewFor}}</h2>\r\n  <form ngNativeValidate>\r\n    <label>Your Review</label><br>\r\n    <textarea [(ngModel)]=\"review.reviewText\" name=\"reviewText\"></textarea><br>\r\n    <label>Review Stars (1-5)</label><br>\r\n    <input type=\"number\" [(ngModel)]=\"review.reviewStars\" name=\"reviewStars\" step=\"1\" min=\"0\" max=\"5\" required><br>\r\n    <input type=\"submit\" (click)=\"submitReview()\" value=\"Submit Review\">\r\n  </form>\r\n  <button (click)=\"reviewFor=-1\">Close Review Section</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from '../service/user.service';\r\nimport {User} from '../../model/User';\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.css']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n  user: User;\r\n  id: number;\r\n  attemptedPasswordChange = false;\r\n  attemptedDetailsChange = false;\r\n  password: string;\r\n  passwordVerification: string;\r\n  isPendingHost = false;\r\n  imageFile: File;\r\n  private ImageFileType: string;\r\n  InvalidFileType = false;\r\n  ImageTooLarge = false;\r\n  alreadyHost = false;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = {userName: null, password: '', telephone: '', firstName: '', ProfilePhoto: null, email: '', lastName: '',\r\n      isHost: false, isTenant: false, isAdmin: false , userId: null};\r\n    this.userService.findUserId(localStorage.getItem('username')).\r\n    subscribe(response => { this.id =  response; this.userService.getUser(response.toString()).\r\n    subscribe(user => {this.user = user; this.alreadyHost = user.isHost; });\r\n                            this.userService.getPendingHost(this.id.toString()).subscribe(pendingHost => this.isPendingHost = true,\r\n          error => this.isPendingHost = false); });\r\n    }\r\n\r\n\r\n  changeDetails(): void{\r\n    this.attemptedDetailsChange = true;\r\n    if (this.user.isHost && !this.alreadyHost){\r\n      this.userService.uploadPendingHost(this.id);\r\n    }\r\n    this.userService.updateUser(this.user, this.id );\r\n  }\r\n\r\n  changePassword(): void{\r\n    this.attemptedPasswordChange = true;\r\n    if (this.passwordMatch() && !this.smallPassword()){\r\n      this.user.password = this.password;\r\n      this.userService.updateUserPassword(this.user, this.id );\r\n    }\r\n  }\r\n\r\n  passwordMatch(): boolean {\r\n    if (this.password == this.passwordVerification) {return true; }\r\n    else {return false; }\r\n  }\r\n\r\n  smallPassword(): boolean {\r\n    return this.attemptedPasswordChange && this.password.length < 4;\r\n  }\r\n\r\n  GetImageUrl(): string{\r\n    if (this.user.userName == null) { return null; }\r\n    return this.userService.GetImageUrl(this.user.userName);\r\n  }\r\n\r\n  private CheckImageType(file: File): string{\r\n    let FileType = '';\r\n    let Index: number = file.name.length;\r\n\r\n    while (file.name.charAt(Index) !== '.' || Index < 0 ){\r\n      FileType = file.name.charAt(Index) + FileType;\r\n      Index--;\r\n    }\r\n    FileType = file.name.charAt(Index) + FileType; // '.'\r\n\r\n    switch (FileType) {\r\n      case '.png':\r\n        return '.png';\r\n      case '.jpg':\r\n        return '.jpg';\r\n      case '.jpeg':\r\n        return '.jpeg';\r\n      case '.gif':\r\n        return '.gif';\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  updatePhoto(event): void{\r\n    this.ImageFileType = this.CheckImageType(event.target.files[0]);\r\n\r\n    if (event.target.files[0].size > 10000000){\r\n      this.imageFile = null;\r\n      this.ImageTooLarge = true;\r\n      return;\r\n    }else { this.ImageTooLarge = false; }\r\n\r\n    if ( this.ImageFileType !== null){\r\n      this.imageFile = event.target.files[0];\r\n      this.InvalidFileType = false;\r\n      this.userService.UploadImage(this.user.userName, this.imageFile).subscribe(\r\n        res => window.location.reload()\r\n      );\r\n    }else{\r\n      this.imageFile = null;\r\n      this.InvalidFileType = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<h2>Edit Account</h2>\r\n\r\n<div class=\"editSection\">\r\n\r\n  <h2>Username : {{user.userName}}</h2>\r\n  <img [attr.src]=\"GetImageUrl()\" />\r\n\r\n  <input type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\" #imageSelector style=\"display: none\" (change)=\"updatePhoto($event)\">\r\n  <button type=\"button\" (click)=\"imageSelector.click()\">Update Photo</button>\r\n  <div *ngIf=\"InvalidFileType\" [className]=\"'warning'\"><p> Please choose an image file such as .png .jpg .jpeg .gif</p></div>\r\n  <div *ngIf=\"ImageTooLarge\" [className]=\"'warning'\"><p> The file you selected is too large (maximum file size is 10mb)</p></div>\r\n\r\n  <div *ngIf=\"isPendingHost\" ><h4 id=\"pending\">Your request to become a host is pending </h4></div>\r\n\r\n  <div class=\"editForm\">\r\n    <form ngNativeValidate>\r\n      <h3> Edit your Details </h3>\r\n      <label>First Name </label><br>\r\n      <input type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstname\" required> <br>\r\n\r\n      <label>Last Name </label><br>\r\n      <input type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastname\" required> <br>\r\n\r\n      <label>Email </label><br>\r\n      <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" required><br>\r\n\r\n      <label>Phone Number </label><br>\r\n      <input type=\"tel\" [(ngModel)]=\"user.telephone\" name=\"telephone\" required> <br>\r\n\r\n\r\n\r\n      <h3> Edit Your Roles </h3>\r\n      <label>Tenant</label><input type=\"checkbox\" [(ngModel)]=\"user.isTenant\" name=\"tenant\">\r\n      <label> Host</label><input type=\"checkbox\" [(ngModel)]=\"user.isHost\" name=\"host\"> <br>\r\n\r\n      <button (click)=\"changeDetails()\">Update Account Details</button>\r\n\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"editForm\">\r\n    <form ngNativeValidate>\r\n      <h3> Change your Password </h3>\r\n      <label>New Password</label><br>\r\n      <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required> <br>\r\n\r\n      <label>Retype Password</label><br>\r\n      <input type=\"password\" [(ngModel)]=\"passwordVerification\" name=\"password2\" required> <br>\r\n\r\n      <div *ngIf=\"smallPassword()\" [className]=\"'warning'\"><p> Password length must be at least 4 characters </p></div>\r\n      <div *ngIf=\"attemptedPasswordChange\" [className]=\"'warning'\"><div *ngIf=\"!passwordMatch()\">Passwords Don't Match!</div></div>\r\n      <button (click)=\"changePassword()\">Update Password</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Availability {\r\n  availabilityId: number;\r\n  placeId: number;\r\n  startingDate: number;\r\n  endingDate: number;\r\n}\r\n"],"sourceRoot":"webpack:///"}